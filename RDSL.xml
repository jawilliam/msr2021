<?xml version="1.0" encoding="utf-8"?>
<Syntax xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" language="C#" xmlns="http://tempuri.org/XNodeTypeSystem.xsd">
  <Nodes>
    <!--ExpressionSyntax - Level 0-->
    <Type name="ExpressionSyntax" abstract="true"/>
    <Type name="ParenthesizedExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #parenthesized">
      <Properties>
        <Property name="OpenParenToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="PrefixUnaryExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #unary #OPERATOR">
      <Properties>
        <Property name="OperatorToken" type="SyntaxToken" index="0" readOnly="true" optional="false" changepoint="true" multiplicity="Single" hashtags="#OPERATOR">
          <Options exclusive="true" labeling="true">            
            <Kind name="PlusToken" type="UnaryPlusExpression" hashtags="#OPERATOR"/>
            <Kind name="MinusToken" type="UnaryMinusExpression" hashtags="#OPERATOR"/>
            <Kind name="TildeToken" type="BitwiseNotExpression" hashtags="#OPERATOR"/>
            <Kind name="ExclamationToken" type="LogicalNotExpression" hashtags="#OPERATOR"/>
            <Kind name="PlusPlusToken" type="PreIncrementExpression" hashtags="#OPERATOR"/>
            <Kind name="MinusMinusToken" type="PreDecrementExpression" hashtags="#OPERATOR"/>
            <Kind name="AmpersandToken" type="AddressOfExpression" hashtags="#OPERATOR"/>
            <Kind name="AsteriskToken" type="PointerIndirectionExpression" hashtags="#OPERATOR"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true" relevancy="1"/>-->            
          </Rules>
        </Property>
        <Property name="Operand" type="ExpressionSyntax" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="AwaitExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #OPERATOR">
      <Properties>
        <Property name="AwaitKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="PostfixUnaryExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #unary #OPERATOR">
      <Properties>
        <Property name="OperatorToken" type="SyntaxToken" index="1" readOnly="true" optional="false" changepoint="true" multiplicity="Single" hashtags="#OPERATOR">
          <Options exclusive="true" labeling="true">
            <Kind name="PlusPlusToken" type="PostIncrementExpression" hashtags="#OPERATOR"/>
            <Kind name="MinusMinusToken" type="PostDecrementExpression" hashtags="#OPERATOR"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true" relevancy="1"/>-->
          </Rules>
        </Property>
        <Property name="Operand" type="ExpressionSyntax" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
      <!--prefix unary compatible?-->
    </Type>
    <Type name="MemberAccessExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #member #access #OPERATOR">
      <Properties>
        <Property name="Expression" type="ExpressionSyntax" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OperatorToken" type="SyntaxToken" index="1" readOnly="true" optional="false" changepoint="true" multiplicity="Single" hashtags="#OPERATOR">
          <Options exclusive="true" labeling="true">            
            <Kind name="DotToken" type="SimpleMemberAccessExpression" hashtags="#OPERATOR"/>
            <Kind name="MinusGreaterThanToken" type="PointerMemberAccessExpression" hashtags="#OPERATOR"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true" relevancy="1"/>-->
          </Rules>
        </Property>
        <Property name="Name" type="SimpleNameSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type#Name#Simple">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Tiny"/>
        <Name equality="true" absolute="true"/>
      </Rules>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="ConditionalAccessExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #access #conditional #OPERATOR">
      <Properties>
        <Property name="Expression" type="ExpressionSyntax" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OperatorToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#OPERATOR">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="WhenNotNull" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Tiny"/>
      </Rules>
    </Type>
    <Type name="MemberBindingExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #member">
      <Properties>
        <Property name="OperatorToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#OPERATOR">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" type="SimpleNameSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type#Name#Simple">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Tiny Eventually"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ElementBindingExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #element">
      <Properties>
        <Property name="ArgumentList" type="BracketedArgumentListSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#LIST#Argument =#LIST#ARGUMENT#Bracketed =#Argument">
          <Rules collection="true">
            <Pairwise discriminant="true" tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Topology leaf="Tiny"/>
      </Rules>
    </Type>
    <Type name="ImplicitElementAccessSyntax" base="ExpressionSyntax" hashtags="#Expression #element #access #implicit">
      <Properties>
        <Property name="ArgumentList" type="BracketedArgumentListSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#LIST#Argument =#LIST#ARGUMENT#Bracketed =#Argument">
          <Rules collection="true">
            <Pairwise discriminant="true" tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Topology leaf="Tiny"/>
      </Rules>
    </Type>
    <Type name="BinaryExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #OPERATOR">
      <Properties>
        <Property name="Left" type="ExpressionSyntax" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OperatorToken" type="SyntaxToken" index="1" readOnly="true" optional="false" changepoint="true" multiplicity="Single" hashtags="#OPERATOR">
          <Options exclusive="true" labeling="true">
            <Kind name="PlusToken" type="AddExpression" hashtags="#OPERATOR"/>
            <Kind name="MinusToken" type="SubtractExpression" hashtags="#OPERATOR"/>
            <Kind name="AsteriskToken" type="MultiplyExpression" hashtags="#OPERATOR"/>
            <Kind name="SlashToken" type="DivideExpression" hashtags="#OPERATOR"/>
            <Kind name="PercentToken" type="ModuloExpression" hashtags="#OPERATOR"/>
            <Kind name="LessThanLessThanToken" type="LeftShiftExpression" hashtags="#OPERATOR"/>
            <Kind name="GreaterThanGreaterThanToken" type="RightShiftExpression" hashtags="#OPERATOR"/>
            <Kind name="BarBarToken" type="LogicalOrExpression" hashtags="#OPERATOR"/>
            <Kind name="AmpersandAmpersandToken" type="LogicalAndExpression" hashtags="#OPERATOR"/>
            <Kind name="BarToken" type="BitwiseOrExpression" hashtags="#OPERATOR"/>
            <Kind name="AmpersandToken" type="BitwiseAndExpression" hashtags="#OPERATOR"/>
            <Kind name="CaretToken" type="ExclusiveOrExpression" hashtags="#OPERATOR"/>
            <Kind name="EqualsEqualsToken" type="EqualsExpression" hashtags="#OPERATOR"/>
            <Kind name="ExclamationEqualsToken" type="NotEqualsExpression" hashtags="#OPERATOR"/>
            <Kind name="LessThanToken" type="LessThanExpression" hashtags="#OPERATOR"/>
            <Kind name="LessThanEqualsToken" type="LessThanOrEqualExpression" hashtags="#OPERATOR"/>
            <Kind name="GreaterThanToken" type="GreaterThanExpression" hashtags="#OPERATOR"/>
            <Kind name="GreaterThanEqualsToken" type="GreaterThanOrEqualExpression" hashtags="#OPERATOR"/>
            <Kind name="IsKeyword" type="IsExpression" hashtags="#KEYWORD #OPERATOR"/>
            <Kind name="AsKeyword" type="AsExpression" hashtags="#KEYWORD #OPERATOR"/>
            <Kind name="QuestionQuestionToken" type="CoalesceExpression" hashtags="#OPERATOR"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true" relevancy="1"/>-->
          </Rules>
        </Property>
        <Property name="Right" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="AssignmentExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #OPERATOR">
      <Properties>
        <Property name="Left" type="ExpressionSyntax" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OperatorToken" type="SyntaxToken" index="1" readOnly="true" optional="false" changepoint="true" multiplicity="Single" hashtags="#OPERATOR">
          <Options exclusive="true" labeling="true">
            <Kind name="EqualsToken" type="SimpleAssignmentExpression" hashtags="#OPERATOR"/>
            <Kind name="PlusEqualsToken" type="AddAssignmentExpression" hashtags="#OPERATOR"/>
            <Kind name="MinusEqualsToken" type="SubtractAssignmentExpression" hashtags="#OPERATOR"/>
            <Kind name="AsteriskEqualsToken" type="MultiplyAssignmentExpression" hashtags="#OPERATOR"/>
            <Kind name="SlashEqualsToken" type="DivideAssignmentExpression" hashtags="#OPERATOR"/>
            <Kind name="PercentEqualsToken" type="ModuloAssignmentExpression" hashtags="#OPERATOR"/>
            <Kind name="AmpersandEqualsToken" type="AndAssignmentExpression" hashtags="#OPERATOR"/>
            <Kind name="CaretEqualsToken" type="ExclusiveOrAssignmentExpression" hashtags="#OPERATOR"/>
            <Kind name="BarEqualsToken" type="OrAssignmentExpression" hashtags="#OPERATOR"/>
            <Kind name="LessThanLessThanEqualsToken" type="LeftShiftAssignmentExpression" hashtags="#OPERATOR"/>
            <Kind name="GreaterThanGreaterThanEqualsToken" type="RightShiftAssignmentExpression" hashtags="#OPERATOR"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true" relevancy="1"/>-->
          </Rules>
        </Property>
        <Property name="Right" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="ConditionalExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #conditional #OPERATOR">
      <Properties>
        <Property name="Condition" type="ExpressionSyntax" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="QuestionToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="WhenTrue" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="WhenFalse" type="ExpressionSyntax" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--ExpressionSyntax$InstanceExpressionSyntax-->
    <Type name="InstanceExpressionSyntax" abstract="true" base="ExpressionSyntax"/>
    <Type name="ThisExpressionSyntax" base="InstanceExpressionSyntax" token="true" readonly="true" hashtags="#Expression #expression #Expression#Instance">
      <Properties>
        <Property name="Token" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal Tiny Likely"/>
      </Rules>
    </Type>
    <Type name="BaseExpressionSyntax" base="InstanceExpressionSyntax" token="true" readonly="true" hashtags="#Expression #expression #Expression#Instance #base">
      <Properties>
        <Property name="Token" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal Tiny Likely"/>
      </Rules>
    </Type>
    <!--ExpressionSyntax-->
    <Type name="LiteralExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression">
      <Properties>
        <Property name="Token" type="SyntaxToken" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Options exclusive="true" labeling="true">
            <Kind name="ArgListKeyword" type="ArgListExpression" hashtags="#KEYWORD"/>
            <Kind name="NumericLiteralToken" type="NumericLiteralExpression" literal="true" readonly="false"/>
            <Kind name="StringLiteralToken" type="StringLiteralExpression" literal="true" readonly="false"/>
            <Kind name="CharacterLiteralToken" type="CharacterLiteralExpression" literal="true" readonly="false"/>
            <Kind name="TrueKeyword" type="TrueLiteralExpression" hashtags="#KEYWORD #OPERATOR"/>
            <Kind name="FalseKeyword" type="FalseLiteralExpression" hashtags="#KEYWORD #OPERATOR"/>
            <Kind name="NullKeyword" type="NullLiteralExpression" hashtags="#KEYWORD #OPERATOR"/>
            <Kind name="DefaultKeyword" type="DefaultLiteralExpression" hashtags="#KEYWORD #OPERATOR"/>
            <!--all the keywords are readonly, the others do not. Or... seen different... no literal is read only.-->
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal Tiny Likely"/>
      </Rules>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="MakeRefExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #ref">
      <Properties>
        <Property name="Keyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="RefTypeExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #type #ref">
      <Properties>
        <Property name="Keyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="RefValueExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #ref">
      <Properties>
        <Property name="Keyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Comma" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="4" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="5" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="CheckedExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #checked #OPERATOR">
      <Properties>
        <Property name="Keyword" type="SyntaxToken" index="0" readOnly="true" optional="false" changepoint="true" multiplicity="Single" hashtags="#KEYWORD">
          <Options exclusive="true" labeling="true">            
            <Kind name="CheckedKeyword" type="CheckedExpression" hashtags="#KEYWORD"/>
            <Kind name="UncheckedKeyword" type="UncheckedExpression" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="DefaultExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #OPERATOR">
      <Properties>
        <Property name="Keyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <Type name="TypeOfExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #type #OPERATOR">
      <Properties>
        <Property name="Keyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <Type name="SizeOfExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #OPERATOR">
      <Properties>
        <Property name="Keyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <Type name="InvocationExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #OPERATOR">
      <Properties>
        <Property name="Expression" type="ExpressionSyntax" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ArgumentList" type="ArgumentListSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="=#Argument #LIST#Argument">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <Type name="ElementAccessExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #element #access #OPERATOR">
      <Properties>
        <Property name="Expression" type="ExpressionSyntax" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ArgumentList" type="BracketedArgumentListSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="=#Argument =#LIST#ARGUMENT#Bracketed">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <Type name="CastExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #OPERATOR">
      <Properties>
        <Property name="OpenParenToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true" leaf="Likely"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <!--ExpressionSyntax$AnonymousFunctionExpressionSyntax-->
    <Type name="AnonymousFunctionExpressionSyntax" abstract="true" base="ExpressionSyntax">
      <Properties>
        <Property name="AsyncKeyword" type="SyntaxToken" index="0" optional="false" multiplicity="Single" hashtags="#KEYWORD">
        </Property>
        <Property name="Body" type="CSharpSyntaxNode" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="AnonymousMethodExpressionSyntax" base="AnonymousFunctionExpressionSyntax" hashtags="#Expression #expression #anonymous #Expression#AnonymousFunction #DECLARATION#FUNCTION #OPERATOR">
      <Properties>
        <Property name="AsyncKeyword" type="SyntaxToken" index="0" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="DelegateKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" type="ParameterListSyntax" index="2" optional="true" changepoint="true" multiplicity="Single" hashtags="=#DECLARATION#Parameter #LIST#Parameter">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" type="CSharpSyntaxNode" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--ExpressionSyntax$AnonymousFunctionExpressionSyntax$LambdaExpressionSyntax-->
    <Type name="LambdaExpressionSyntax" abstract="true" base="AnonymousFunctionExpressionSyntax">
      <Properties>
        <Property name="ArrowToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single">
        </Property>
      </Properties>
    </Type>
    <Type name="SimpleLambdaExpressionSyntax" base="LambdaExpressionSyntax" hashtags="#Expression #expression #ANONYMOUS #Expression#AnonymousFunction #Expression#AnonymousFunction#Lambda #DECLARATION#FUNCTION #OPERATOR">
      <Properties>
        <Property name="AsyncKeyword" type="SyntaxToken" index="0" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Parameter" type="ParameterSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="=#DECLARATION#Parameter #DECLARATION#VARIABLE">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Hint" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ArrowToken" type="SyntaxToken" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Body" type="CSharpSyntaxNode" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name suitability="Hint" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ParenthesizedLambdaExpressionSyntax" base="LambdaExpressionSyntax" hashtags="#Expression #expression #ANONYMOUS #Expression#AnonymousFunction #Expression#AnonymousFunction#Lambda #parenthesized #DECLARATION#FUNCTION #OPERATOR">
      <Properties>
        <Property name="AsyncKeyword" type="SyntaxToken" index="0" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" type="ParameterListSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#DECLARATION#VARIABLE #LIST#Parameter =#DECLARATION#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ArrowToken" type="SyntaxToken" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Body" type="CSharpSyntaxNode" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--ExpressionSyntax-->
    <Type name="InitializerExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #initializer">
      <Properties>
        <Property name="OpenBraceToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expressions" type="SeparatedSyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="ExpressionSyntax" collectionSeparator="," hashtags="#Expression">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Options exclusive="true">
        <Type name="ObjectInitializerExpression"/>
        <Type name="CollectionInitializerExpression"/>
        <Type name="ArrayInitializerExpression"/>
        <Type name="ComplexElementInitializerExpression"/>
      </Options>
      <Rules collection="true"/>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="ObjectCreationExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #creation #object #OPERATOR">
      <Properties>
        <Property name="NewKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ArgumentList" type="ArgumentListSyntax" index="2" optional="true" changepoint="true" multiplicity="Single" hashtags="#LIST#Argument =#Argument">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Initializer" type="InitializerExpressionSyntax" index="3" optional="true" changepoint="true" multiplicity="Single" hashtags="#Expression#Initializer">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="AnonymousObjectCreationExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #anonymous #creation #object #OPERATOR">
      <Properties>
        <Property name="NewKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Initializers" type="SeparatedSyntaxList" index="2" optional="false" changepoint="true" multiplicity="Collection" collectionType="AnonymousObjectMemberDeclaratorSyntax" collectionSeparator="," hashtags="=#DECLARATOR#OBJECT#Member">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="ArrayCreationExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #array #creation #OPERATOR">
      <Properties>
        <Property name="NewKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="ArrayTypeSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type#Array">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Initializer" type="InitializerExpressionSyntax" index="2" optional="true" changepoint="true" multiplicity="Single" hashtags="#Expression#Initializer">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ImplicitArrayCreationExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #array #creation #implicit #OPERATOR">
      <Properties>
        <Property name="NewKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenBracketToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Commas" type="SyntaxTokenList" index="2" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
          <!-- puntuaction="true"? -->
        </Property>
        <Property name="CloseBracketToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Initializer" type="InitializerExpressionSyntax" index="4" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Initializer">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="StackAllocArrayCreationExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #array #creation">
      <Properties>
        <Property name="StackAllocKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <Type name="QueryExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #QUERY #query">
      <Properties>
        <Property name="FromClause" type="FromClauseSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="=#QUERY#Clause#From">
          <Rules>
            <Name suitability="Hint" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" type="QueryBodySyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#QUERY#Body">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Hint" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="InterpolatedStringExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression">
      <Properties>
        <Property name="StringStartToken" type="SyntaxToken" index="0" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Options exclusive="true">
            <Kind name="InterpolatedStringStartToken" hashtags="#PUNTUACTION"/>
            <Kind name="InterpolatedVerbatimStringStartToken" hashtags="#PUNTUACTION"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
          <!-- readOnly="true"-->
        </Property>
        <Property name="Contents" type="SyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="InterpolatedStringContentSyntax" hashtags="#INTERPOLATION#STRING#Content">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="StringEndToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <!--And Related-->
    <Type name="InterpolatedStringContentSyntax" abstract="true"/>
    <Type name="InterpolatedStringTextSyntax" base="InterpolatedStringContentSyntax" hashtags="#INTERPOLATION#STRING #INTERPOLATION#STRING#Content #text">
      <Properties>
        <Property name="TextToken" type="SyntaxToken" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal"/>
      </Rules>
    </Type>
    <Type name="InterpolationSyntax" base="InterpolatedStringContentSyntax" hashtags="#interpolation #INTERPOLATION#STRING#Content">
      <Properties>
        <Property name="OpenBraceToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="AlignmentClause" type="InterpolationAlignmentClauseSyntax" index="2" optional="true" changepoint="true" multiplicity="Single" hashtags="#CLAUSE#INTERPOLATION#Alignment">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="FormatClause" type="InterpolationFormatClauseSyntax" index="3" optional="true" changepoint="true" multiplicity="Single" hashtags="#CLAUSE#INTERPOLATION#Format">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" type="SyntaxToken" index="4" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="InterpolationAlignmentClauseSyntax" hashtags="#clause #interpolation">
      <Properties>
        <Property name="CommaToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Value" type="ExpressionSyntax" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true" tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="InterpolationFormatClauseSyntax" hashtags="#clause #interpolation">
      <Properties>
        <Property name="ColonToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="FormatStringToken" type="SyntaxToken" index="0" optional="false" changepoint="true" multiplicity="Single">
          <!-- puntuaction="true"? I think this property should not be readonly-->
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal"/>
      </Rules>
    </Type>
    <!--And Related$BaseArgumentListSyntax-->
    <Type name="BaseArgumentListSyntax" abstract="true">
      <Properties>
        <Property name="Arguments" type="SeparatedSyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="ArgumentSyntax" collectionSeparator=",">
        </Property>
      </Properties>
    </Type>
    <Type name="ArgumentListSyntax" base="BaseArgumentListSyntax" hashtags="#LIST#Argument #argument #list">
      <Properties>
        <Property name="OpenParenToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Arguments" type="SeparatedSyntaxList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="ArgumentSyntax" collectionSeparator="," hashtags="=#Argument">
          <Rules collection="true">
            <!--<Name equality="true" absolute="true"/>-->
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="BracketedArgumentListSyntax" base="BaseArgumentListSyntax" hashtags="#LIST#Argument #argument #list #bracketed =#LIST#ARGUMENT#Bracketed">
      <Properties>
        <Property name="OpenBracketToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Arguments" type="SeparatedSyntaxList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="ArgumentSyntax" collectionSeparator="," hashtags="=#Argument">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBracketToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <!--And Related-->
    <Type name="ArgumentSyntax" hashtags="#argument =#Argument">
      <Properties>
        <Property name="NameColon" type="NameColonSyntax" index="0" optional="true" changepoint="true" multiplicity="Single" hashtags="#EXPRESSION#TYPE#NAME#SIMPLE#IDENTIFIER#Colon #IDENTIFIER">
          <Rules>
            <Pairwise tunneling="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="RefKindKeyword" type="SyntaxToken" index="1" optional="true" changepoint="true" multiplicity="Single" hashtags="#KEYWORD">
          <Options exclusive="true">
            <Kind name="RefKeyword" hashtags="#KEYWORD"/>
            <Kind name="OutKeyword" hashtags="#KEYWORD"/>
            <Kind name="InKeyword" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="NameColonSyntax" hashtags="#IDENTIFIER#WRAPPER #name #equals">
      <Properties>
        <Property name="Name" type="IdentifierNameSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type#Name#Simple#Identifier">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Tiny Terminal"/>
        <Compatibility>
          <Name equality="true" absolute="true" type="NameEqualsSyntax" twoWay="true">
            <Condition code="{0}.Name.Identifier.ValueText == {1}.Name.Identifier.ValueText"/>
          </Name>
        </Compatibility>
      </Rules>
    </Type>
    <Type name="NameEqualsSyntax" hashtags="#IDENTIFIER#WRAPPER #name #equals">
      <Properties>
        <Property name="Name" type="IdentifierNameSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type#Name#Simple#Identifier">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EqualsToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Tiny Terminal"/>
      </Rules>
    </Type>
    <Type name="AnonymousObjectMemberDeclaratorSyntax" hashtags="#member #anonymous #DECLARATION #object #declarator =#DECLARATOR#OBJECT#Member">
      <Properties>
        <Property name="NameEquals" type="NameEqualsSyntax" index="0" optional="true" changepoint="true" multiplicity="Single" hashtags="#EXPRESSION#TYPE#NAME#SIMPLE#IDENTIFIER#Equals #IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
      <!--Field, Property, and Variable Compatible-->
    </Type>
    <Type name="QueryBodySyntax" hashtags="#QUERY #query">
      <Properties>
        <Property name="Clauses" type="SyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="QueryClauseSyntax" hashtags="#QUERY#Clause">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SelectOrGroup" type="SelectOrGroupClauseSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#QUERY#CLAUSE#SelectOrGroup">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Continuation" type="QueryContinuationSyntax" index="2" optional="true" changepoint="true" multiplicity="Single" hashtags="=#QUERY#Continuation #IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related$QueryClauseSyntax-->
    <Type name="QueryClauseSyntax" abstract="true"/>
    <Type name="FromClauseSyntax" base="QueryClauseSyntax" hashtags="#QUERY #QUERY#Clause #clause =#QUERY#Clause#From">
      <Properties>
        <Property name="FromKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="1" optional="true" changepoint="true" multiplicity="Single" hashtags="#Expression#Type #DECLARATION#VARIABLE#TYPE">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER #DECLARATION#VARIABLE#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="InKeyword" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="LetClauseSyntax" base="QueryClauseSyntax" hashtags="#clause #QUERY #QUERY#Clause">
      <Properties>
        <Property name="LetKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER #DECLARATION#VARIABLE#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true" priority="0"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EqualsToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true" priority="1"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="JoinClauseSyntax" base="QueryClauseSyntax" hashtags="#clause #QUERY #QUERY#Clause #join">
      <Properties>
        <Property name="JoinKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="1" optional="true" changepoint="true" multiplicity="Single" hashtags="#Expression#Type #DECLARATION#VARIABLE#TYPE">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER #DECLARATION#VARIABLE#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="InKeyword" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="InExpression" type="ExpressionSyntax" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OnKeyword" type="SyntaxToken" index="5" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="LeftExpression" type="ExpressionSyntax" index="6" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EqualsKeyword" type="SyntaxToken" index="7" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="RightExpression" type="ExpressionSyntax" index="8" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Into" type="JoinIntoClauseSyntax" index="9" optional="true" changepoint="true" multiplicity="Single" hashtags="=#CLAUSE#JOIN#Into #DECLARATION#VARIABLE #IDENTIFIER">
          <Rules>
            <Pairwise tunneling="true"/>
            <Name suitability="Key" equality="true" absolute="true" priority="1"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="JoinIntoClauseSyntax" hashtags="#QUERY #join #clause =#CLAUSE#JOIN#Into">
      <Properties>
        <Property name="IntoKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER #DECLARATION#VARIABLE#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="WhereClauseSyntax" base="QueryClauseSyntax" hashtags="#clause #QUERY #QUERY#Clause">
      <Properties>
        <Property name="WhereKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" type="ExpressionSyntax" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="OrderByClauseSyntax" base="QueryClauseSyntax" hashtags="#clause #ORDERBY #QUERY #QUERY#Clause">
      <Properties>
        <Property name="OrderByKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Orderings" type="SeparatedSyntaxList" index="0" optional="false" multiplicity="Collection" collectionType="OrderingSyntax" collectionSeparator="," hashtags="=#QUERY#Ordering">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="OrderingSyntax" hashtags="#ORDERBY #QUERY =#QUERY#Ordering">
      <Properties>
        <Property name="Expression" type="ExpressionSyntax" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="AscendingOrDescendingKeyword" type="SyntaxToken" index="1" readOnly="true" optional="true" multiplicity="Single" hashtags="#KEYWORD">
          <Options exclusive="true" labeling="true">
            <Kind name="AscendingKeyword" type="AscendingOrdering" hashtags="#KEYWORD"/>
            <Kind name="DescendingKeyword" type="DescendingOrdering" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true"/>?-->
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <!--And Related$SelectOrGroupClauseSyntax-->
    <Type name="SelectOrGroupClauseSyntax" abstract="true"/>
    <Type name="SelectClauseSyntax" base="SelectOrGroupClauseSyntax" hashtags="#clause #QUERY #QUERY#CLAUSE#SelectOrGroup">
      <Properties>
        <Property name="SelectKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="GroupClauseSyntax" base="SelectOrGroupClauseSyntax" hashtags="#clause #QUERY #QUERY#CLAUSE#SelectOrGroup">
      <Properties>
        <Property name="GroupKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="GroupExpression" type="ExpressionSyntax" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ByKeyword" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ByExpression" type="ExpressionSyntax" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="QueryContinuationSyntax" hashtags="#QUERY #query =#QUERY#Continuation">
      <Properties>
        <Property name="IntoKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER #DECLARATION#VARIABLE#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true" priority="0"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" type="QueryBodySyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#QUERY#Body">
          <Rules>
            <Pairwise discriminant="true" priority="1"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>

    <!--ExpressionSyntax$TypeSyntax - Level 0-->
    <Type name="TypeSyntax" abstract="true" base="ExpressionSyntax"/>
    <Type name="PredefinedTypeSyntax" base="TypeSyntax" readonly="true" hashtags="#Expression #Expression#Type #type">
      <Properties>
        <Property name="Keyword" type="SyntaxToken" index="0" readOnly="true" optional="false" changepoint="true" multiplicity="Single" hashtags="#KEYWORD">
          <Options exclusive="true">            
            <Kind name="BoolKeyword" hashtags="#KEYWORD"/>
            <Kind name="ByteKeyword" hashtags="#KEYWORD"/>
            <Kind name="SByteKeyword" hashtags="#KEYWORD"/>
            <Kind name="IntKeyword" hashtags="#KEYWORD"/>
            <Kind name="UIntKeyword" hashtags="#KEYWORD"/>
            <Kind name="ShortKeyword" hashtags="#KEYWORD"/>
            <Kind name="UShortKeyword" hashtags="#KEYWORD"/>
            <Kind name="LongKeyword" hashtags="#KEYWORD"/>
            <Kind name="ULongKeyword" hashtags="#KEYWORD"/>
            <Kind name="FloatKeyword" hashtags="#KEYWORD"/>
            <Kind name="DoubleKeyword" hashtags="#KEYWORD"/>
            <Kind name="DecimalKeyword" hashtags="#KEYWORD"/>
            <Kind name="StringKeyword" hashtags="#KEYWORD"/>
            <Kind name="CharKeyword" hashtags="#KEYWORD"/>
            <Kind name="ObjectKeyword" hashtags="#KEYWORD"/>
            <Kind name="VoidKeyword" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true" discriminant="true"/>
            <Topology relevant="true"/><!---->
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal Tiny"/>
        <Compatibility>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.BoolKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Boolean&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.BoolKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Boolean&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ByteKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Byte&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ByteKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Byte&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.SByteKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;SByte&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.SByteKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;SByte&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.IntKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Int32&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.IntKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Int32&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.UIntKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;UInt32&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.UIntKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;UInt32&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ShortKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Int16&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ShortKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Int16&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.UShortKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;UInt16&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.UShortKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;UInt16&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.LongKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Int64&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.LongKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Int64&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ULongKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;UInt64&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ULongKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;UInt64&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.FloatKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Single&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.FloatKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Single&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.DoubleKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Double&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.DoubleKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Double&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.DecimalKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Decimal&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.DecimalKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Decimal&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.StringKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;String&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.StringKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;String&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.CharKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Char&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.CharKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Char&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ObjectKeyword"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Object&quot;"/>
          </Alias>
          <Alias type="QualifiedNameSyntax" twoWay="true">
            <Condition code="{0}.Keyword.RawKind == (int)Microsoft.CodeAnalysis.CSharp.SyntaxKind.ObjectKeyword"/>
            <Condition code="({1}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({1}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Object&quot;"/>
          </Alias>          
        </Compatibility>
      </Rules>
    </Type>
    <Type name="ArrayTypeSyntax" base="TypeSyntax" hashtags="#Expression #array #Expression#Type #type">
      <Properties>
        <Property name="ElementType" type="TypeSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="RankSpecifiers" type="SyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="ArrayRankSpecifierSyntax" hashtags="=#SPECIFIER#ARRAY#Rank">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="PointerTypeSyntax" base="TypeSyntax" hashtags="#Expression #Expression#Type #type">
      <Properties>
        <Property name="ElementType" type="TypeSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Pairwise discriminant="true" tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="AsteriskToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="NullableTypeSyntax" base="TypeSyntax" hashtags="#Expression #Expression#Type #type">
      <Properties>
        <Property name="ElementType" type="TypeSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Pairwise discriminant="true" tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="QuestionToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    <!--Alias with Nullable<T>, which is a qualified name-->
    </Type>
    <Type name="OmittedTypeArgumentSyntax" base="TypeSyntax" readonly="true" symbolic="true" hashtags="#Expression #Expression#Type #type#argument #omitted #argument #type">
      <Properties>
        <Property name="OmittedTypeArgumentToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#SYMBOLIC">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal Tiny"/>
      </Rules>
    </Type>
    <!--ExpressionSyntax$TypeSyntax$NameSyntax-->
    <Type name="NameSyntax" abstract="true" base="TypeSyntax"/>
    <Type name="QualifiedNameSyntax" base="NameSyntax" hashtags="#Expression #Expression#Type #Expression#Type#Name #qualified #name">
      <Properties>
        <Property name="Left" type="NameSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type#Name">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="DotToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Right" type="SimpleNameSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type#Name#Simple">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
        <Compatibility>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Boolean&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Boolean&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Byte&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Byte&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;SByte&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;SByte&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Int32&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Int32&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;UInt32&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;UInt32&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Int16&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Int16&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;UInt16&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;UInt16&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Int64&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Int64&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;UInt64&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;UInt64&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Single&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Single&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Double&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Double&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Decimal&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Decimal&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;String&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;String&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Char&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Char&quot;"/>
          </Alias>
          <Alias type="IdentifierNameSyntax" twoWay="true">
            <Condition code="({0}.Left as IdentifierNameSyntax)?.Identifier.ValueText == &quot;System&quot;"/>
            <Condition code="({0}.Right as IdentifierNameSyntax)?.Identifier.ValueText == &quot;Object&quot;"/>
            <Condition code="{1}.Identifier.ValueText == &quot;Object&quot;"/>
          </Alias>          
        </Compatibility>
      </Rules>
    </Type>
    <Type name="AliasQualifiedNameSyntax" base="NameSyntax" hashtags="#Expression #Expression#Type #Expression#Type#Name #qualified #alias #name">
      <Properties>
        <Property name="Alias" type="IdentifierNameSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type#Name#Simple#Identifier">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonColonToken" type="SyntaxToken" index="1" readOnly="true" optional="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" type="SimpleNameSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type#Name#Simple">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--ExpressionSyntax$TypeSyntax$NameSyntax$SimpleNameSyntax-->
    <Type name="SimpleNameSyntax" abstract="true" base="NameSyntax">
      <Properties>
        <Property name="Identifier" type="SyntaxToken" index="0" optional="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="IdentifierNameSyntax" base="SimpleNameSyntax" hashtags="#Expression #Expression#Type #Expression#Type#Name #Expression#Type#Name#Simple #name">
      <Properties>
        <Property name="Identifier" type="SyntaxToken" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Options exclusive="true">
             <Kind name="IdentifierToken" identifier="true" readonly="false" hashtags="#IDENTIFIER"/>
             <Kind name="GlobalKeyword" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true" descendant="false"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal Tiny"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="GenericNameSyntax" base="SimpleNameSyntax" hashtags="#Expression #Expression#Type #Expression#Type#Name #Expression#Type#Name#Simple #name">
      <Properties>
        <Property name="Identifier" type="SyntaxToken" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true" priority="0"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TypeArgumentList" type="TypeArgumentListSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="=#LIST#TYPE#Argument =#TYPE#Argument">
          <Rules collection="true">
            <Pairwise discriminant="true" priority="1" tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related-->
    <Type name="TypeArgumentListSyntax" hashtags="#list #argument #type #type#argument =#LIST#TYPE#Argument">
      <Properties>
        <Property name="LessThanToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Arguments" type="SeparatedSyntaxList" index="1" optional="false" multiplicity="Collection" collectionType="TypeSyntax" collectionSeparator="," hashtags="#Expression#Type">
          <Rules collection="true">
            <!--<Name equality="true" absolute="true"/>-->
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="GreaterThanToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="ArrayRankSpecifierSyntax" hashtags="#array #specifier =#SPECIFIER#ARRAY#Rank">
      <Properties>
        <Property name="OpenBracketToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Sizes" type="SeparatedSyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="ExpressionSyntax" collectionSeparator="," hashtags="#Expression">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBracketToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="OmittedArraySizeExpressionSyntax" base="ExpressionSyntax" readonly="true" symbolic="true" hashtags="#Expression #expression #array #omitted">
      <Properties>
        <Property name="OmittedArraySizeExpressionToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#SYMBOLIC">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal Tiny"/>
      </Rules>
    </Type>

    <!--StatementSyntax \ {GlobalStatementSyntax in fact inherits from member declaration} - Level 1-->
    <Type name="StatementSyntax" abstract="true"/>
    <Type name="BlockSyntax" base="StatementSyntax" hashtags="#Statement">
      <Properties>
        <Property name="OpenBraceToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statements" type="SyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="StatementSyntax" hashtags="#Statement">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="LocalDeclarationStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #declaration #DECLARATION #DECLARATION#LOCAL #DECLARATION#VARIABLE"><!--declaration-->
      <Properties>
        <Property name="Modifiers" type="SyntaxTokenList" index="0" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Declaration" type="VariableDeclarationSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#DECLARATION#Variable #DECLARATION#VARIABLE #IDENTIFIER">
          <Rules collection="true">
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ExpressionStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #expression #EXPRESSION#WRAPPER">
      <Properties>
        <Property name="Expression" type="ExpressionSyntax" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="EmptyStatementSyntax" base="StatementSyntax" readonly="true" hashtags="#Statement #statement">
      <Properties>
        <Property name="SemicolonToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal"/>
      </Rules>
    </Type>
    <Type name="LabeledStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #label">
      <Properties>
        <Property name="Identifier" type="SyntaxToken" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Name suitability="Hint" equality="true" absolute="true"/>
            <Pairwise tunneling="true" priority="0"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" type="StatementSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Statement">
          <Rules eventuallyCollection="true">
            <Pairwise discriminant="true" priority="1"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Hint" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="GotoStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="GotoKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="CaseOrDefaultKeyword" type="SyntaxToken" index="1" readOnly="true" optional="true" changepoint="true" multiplicity="Single" hashtags="#KEYWORD">
          <Options exclusive="true" labeling="true">
            <Kind type="GotoStatement"/>
            <Kind name="CaseKeyword" type="GotoCaseStatement" hashtags="#KEYWORD"/>
            <Kind name="DefaultKeyword" type="GotoDefaultStatement" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true" relevancy="1"/>-->
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Eventually"/>
      </Rules>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="BreakStatementSyntax" base="StatementSyntax" readonly="true" hashtags="#Statement #statement">
      <Properties>
        <Property name="BreakKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal"/>
      </Rules>
    </Type>
    <Type name="ContinueStatementSyntax" base="StatementSyntax" readonly="true" hashtags="#Statement #statement">
      <Properties>
        <Property name="ContinueKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal"/>
      </Rules>
    </Type>
    <Type name="ReturnStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="ReturnKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ThrowStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #throw">
      <Properties>
        <Property name="ThrowKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="YieldStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="YieldKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ReturnOrBreakKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" changepoint="true" multiplicity="Single" hashtags="#KEYWORD">
          <Options exclusive="true" labeling="true">
            <Kind name="ReturnKeyword" type="YieldReturnStatement" hashtags="#KEYWORD"/>
            <Kind name="BreakKeyword" type="YieldBreakStatement" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="WhileStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #WHILE">
      <Properties>
        <Property name="WhileKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" type="StatementSyntax" index="4" optional="false" changepoint="true" multiplicity="Single" hashtags="#Statement">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="DoStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #WHILE">
      <Properties>
        <Property name="DoKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" type="StatementSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#Statement">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="WhileKeyword" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" type="ExpressionSyntax" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="5" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="6" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <!--While compatible-->
    </Type>
    <Type name="ForStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #for">
      <Properties>
        <Property name="ForKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Declaration" type="VariableDeclarationSyntax" index="2" optional="true" changepoint="true" multiplicity="Single" hashtags="#DECLARATION#Variable #DECLARATION#VARIABLE">
          <Rules collection="true">
            <Name suitability="Hint" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Initializers" type="SeparatedSyntaxList" index="3" optional="false" changepoint="true" multiplicity="Collection" collectionType="ExpressionSyntax" collectionSeparator="," hashtags="#Expression">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="FirstSemicolonToken" type="SyntaxToken" index="4" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" type="ExpressionSyntax" index="5" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SecondSemicolonToken" type="SyntaxToken" index="6" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Incrementors" type="SeparatedSyntaxList" index="7" optional="false" changepoint="true" multiplicity="Collection" collectionType="ExpressionSyntax" collectionSeparator="," hashtags="#Expression">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="8" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" type="StatementSyntax" index="9" optional="false" changepoint="true" multiplicity="Single" hashtags="#Statement">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Hint" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ForEachStatementSyntax" base="CommonForEachStatementSyntax" hashtags="#Statement #statement #Statement#ForEach #for">
      <Properties>
        <Property name="ForEachKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" inherited="true" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" inherited="true" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type #DECLARATION#VARIABLE#TYPE">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="3" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER #DECLARATION#VARIABLE#IDENTIFIER">
          <Rules>
            <Name suitability="Hint" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="InKeyword" type="SyntaxToken" index="4" readOnly="true" optional="false" multiplicity="Single" inherited="true" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="5" optional="false" changepoint="true" multiplicity="Single" inherited="true">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="6" readOnly="true" optional="false" multiplicity="Single" inherited="true" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" type="StatementSyntax" index="7" optional="false" changepoint="true" multiplicity="Single" inherited="true" hashtags="#Statement">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Hint" equality="true" absolute="true"/>
      </Rules>
      <!--for compatible-->
    </Type>
    <Type name="UsingStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="UsingKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Declaration" type="VariableDeclarationSyntax" index="2" optional="true" changepoint="true" multiplicity="Single" hashtags="#DECLARATION#Variable #DECLARATION#VARIABLE">
          <Rules collection="true">
            <Name suitability="Hint" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="4" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" type="StatementSyntax" index="5" optional="false" changepoint="true" multiplicity="Single" hashtags="#Statement">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Hint" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="FixedStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="FixedKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Declaration" type="VariableDeclarationSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#DECLARATION#Variable #DECLARATION#VARIABLE">
          <Rules collection="true">
            <Name suitability="Hint" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" type="StatementSyntax" index="4" optional="false" changepoint="true" multiplicity="Single" hashtags="#Statement">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Hint" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="CheckedStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #checked #OPERATOR">
      <Properties>
        <Property name="Keyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Options exclusive="true" labeling="true">
            <Kind name="CheckedKeyword" type="CheckedStatement" hashtags="#KEYWORD"/>
            <Kind name="UncheckedKeyword" type="UncheckedStatement" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Block" type="BlockSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#Statement#Block">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
      <!--Checked expression compatible?-->
    </Type>
    <Type name="UnsafeStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="UnsafeKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Block" type="BlockSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#Statement#Block">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="LockStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="LockKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" type="StatementSyntax" index="4" optional="false" changepoint="true" multiplicity="Single" hashtags="#Statement">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="IfStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #if">
      <Properties>
        <Property name="IfKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" type="StatementSyntax" index="4" optional="false" changepoint="true" multiplicity="Single" hashtags="#Statement">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Else" type="ElseClauseSyntax" index="5" optional="true" changepoint="true" multiplicity="Single" hashtags="#CLAUSE#Else">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <!--Conditional expression compatible-->
    </Type>
    <Type name="SwitchStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #switch">
      <Properties>
        <Property name="SwitchKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" type="SyntaxToken" index="4" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Sections" type="SyntaxList" index="5" optional="false" changepoint="true" multiplicity="Collection" collectionType="SwitchSectionSyntax" hashtags="=#SWITCH#Section">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" type="SyntaxToken" index="6" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="TryStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement">
      <Properties>
        <Property name="TryKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Block" type="BlockSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#Statement#Block">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Catches" type="SyntaxList" index="2" optional="false" changepoint="true" multiplicity="Collection" collectionType="CatchClauseSyntax" hashtags="=#CLAUSE#Catch">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Finally" type="FinallyClauseSyntax" index="3" optional="true" changepoint="true" multiplicity="Single" hashtags="#CLAUSE#Finally">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--And Variable (by Local Declaration) Related-->
    <Type name="VariableDeclarationSyntax" hashtags="#declaration #variable #DECLARATION#VARIABLE #DECLARATION">
      <Properties>
        <Property name="Type" type="TypeSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type #DECLARATION#VARIABLE#TYPE">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Variables" type="SeparatedSyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="VariableDeclaratorSyntax" collectionSeparator="," hashtags="=#DECLARATOR#Variable">
          <Rules collection="true">
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <!--<Name equality="true" absolute="true"/>-->
      </Rules>
    </Type>
    <Type name="VariableDeclaratorSyntax" hashtags="#variable #declarator #DECLARATION#VARIABLE #DECLARATION =#DECLARATOR#Variable">
      <Properties>
        <Property name="Identifier" type="SyntaxToken" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER #DECLARATION#VARIABLE#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ArgumentList" type="BracketedArgumentListSyntax" index="1" optional="true" changepoint="true" multiplicity="Single" hashtags="=#LIST#ARGUMENT#Bracketed =#Argument">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Initializer" type="EqualsValueClauseSyntax" index="2" optional="true" changepoint="true" multiplicity="Single" hashtags="#CLAUSE#VALUE#Equals">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <!--<Name equality="true" absolute="true"/>-->
      </Rules>
    </Type>
    <Type name="EqualsValueClauseSyntax" hashtags="#VALUE#WRAPPER #clause">
      <Properties>
        <Property name="EqualsToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Value" type="ExpressionSyntax" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Tiny"/>
      </Rules>
    </Type>
    <!--And If Related-->
    <Type name="ElseClauseSyntax" hashtags="#IF #clause">
      <Properties>
        <Property name="ElseKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" type="StatementSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#Statement">
          <Rules eventuallyCollection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="SwitchSectionSyntax" hashtags="#switch =#SWITCH#Section">
      <Properties>
        <Property name="Labels" type="SyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="SwitchLabelSyntax" hashtags="#SWITCH#Label">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Statements" type="SyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="StatementSyntax" hashtags="#Statement">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <!--And switch Related$SwitchLabelSyntax-->
    <Type name="SwitchLabelSyntax" abstract="true">
      <Properties>
        <Property name="Keyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
        </Property>
        <Property name="ColonToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single">
        </Property>
      </Properties>
    </Type>
    <Type name="CaseSwitchLabelSyntax" base="SwitchLabelSyntax" hashtags="#switch #label #SWITCH#Label">
      <Properties>
        <Property name="Keyword" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Value" type="ExpressionSyntax" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" type="SyntaxToken" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <Type name="DefaultSwitchLabelSyntax" base="SwitchLabelSyntax" readonly="true" hashtags="#switch #label #SWITCH#Label">
      <Properties>
        <Property name="Keyword" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" type="SyntaxToken" index="1" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/>
      </Rules>
    </Type>
    <!--And Try Related$-->
    <Type name="CatchClauseSyntax" hashtags="#TRY #clause #catch =#CLAUSE#Catch">
      <Properties>
        <Property name="CatchKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Declaration" type="CatchDeclarationSyntax" index="1" optional="true" changepoint="true" multiplicity="Single" hashtags="#DECLARATION#Catch #DECLARATION#VARIABLE">
          <Rules>
            <Name suitability="Hint" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Filter" type="CatchFilterClauseSyntax" index="2" optional="true" changepoint="true" multiplicity="Single" hashtags="#DECLARATION#CATCH#Filter">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Block" type="BlockSyntax" index="3" optional="false" changepoint="true" multiplicity="Single" hashtags="#Statement#Block">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Hint" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="CatchDeclarationSyntax" hashtags="#declaration #DECLARATION#VARIABLE#DECLARATOR #catch"><!--variable-->
      <!--declaration-->
      <Properties>
        <Property name="OpenParenToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type #DECLARATION#VARIABLE#TYPE">
          <Rules>
            <Pairwise discriminant="true" priority="1"/>
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="2" optional="true" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER #DECLARATION#VARIABLE#IDENTIFIER">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true" priority="0"/>
            <Topology relevant="true" relevantOnlyIf="{0}.Identifier.RawKind != (int)SyntaxKind.None"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="CatchFilterClauseSyntax" hashtags="#catch #clause">
      <Properties>
        <Property name="WhenKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="FilterExpression" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <Type name="FinallyClauseSyntax" hashtags="#TRY #clause">
      <Properties>
        <Property name="FinallyKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Block" type="BlockSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#Statement#Block">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>

    <!--Member Declarations - Level 3-->
    <Type name="MemberDeclarationSyntax" abstract="true"/>
    <Type name="IncompleteMemberSyntax" base="MemberDeclarationSyntax" hashtags="#DECLARATION#Member #member">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="2" optional="true" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Eventually"/>
      </Rules>
    </Type>
    <Type name="GlobalStatementSyntax" base="MemberDeclarationSyntax" hashtags="#DECLARATION#Member #STATEMENT#WRAPPER #statement">
      <Properties>
        <Property name="Statement" type="StatementSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Statement">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
          <!-- eventuallyCollection="true"?-->
        </Property>
      </Properties>
    </Type>
    <Type name="DelegateDeclarationSyntax" base="MemberDeclarationSyntax" hashtags="#declaration #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="DelegateKeyword" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ReturnType" type="TypeSyntax" index="3" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="4" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TypeParameterList" type="TypeParameterListSyntax" index="5" optional="true" changepoint="true" multiplicity="Single" hashtags="=#LIST#TYPE#Parameter =#TYPE#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" type="ParameterListSyntax" index="6" optional="false" changepoint="true" multiplicity="Single" hashtags="#LIST#Parameter =#DECLARATION#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ConstraintClauses" type="SyntaxList" index="7" optional="false" changepoint="true" multiplicity="Collection" collectionType="TypeParameterConstraintClauseSyntax" hashtags="=#CLAUSE#TYPE#PARAMETER#Constraint">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="8" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--Member Declarations$BaseTypeDeclarationSyntax-->
    <Type name="BaseTypeDeclarationSyntax" abstract="true" base="MemberDeclarationSyntax">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules>
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
          </Rules>
        </Property>
        <Property name="BaseList" type="BaseListSyntax" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" type="SyntaxToken" index="4" readOnly="true" optional="false" multiplicity="Single">
        </Property>
        <Property name="CloseBraceToken" type="SyntaxToken" index="5" readOnly="true" optional="false" multiplicity="Single">
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="6" readOnly="true" optional="true" changepoint="true" multiplicity="Single">
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="EnumDeclarationSyntax" base="BaseTypeDeclarationSyntax" hashtags="#declaration #DECLARATION#Member #DECLARATION#Member#Type #enum">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="EnumKeyword" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="BaseList" type="BaseListSyntax" index="4" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="=#LIST#TYPE#Base =#TYPE#Base">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" type="SyntaxToken" index="5" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Members" type="SeparatedSyntaxList" index="6" optional="false" changepoint="true" multiplicity="Collection" collectionType="EnumMemberDeclarationSyntax" collectionSeparator="," hashtags="=#DECLARATION#ENUM#Member">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" type="SyntaxToken" index="7" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="8" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--Member Declarations$BaseTypeDeclarationSyntax$TypeDeclarationSyntax-->
    <Type name="TypeDeclarationSyntax" abstract="true" base="BaseTypeDeclarationSyntax">
      <Properties>
        <Property name="Keyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
        </Property>
        <Property name="TypeParameterList" type="TypeParameterListSyntax" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ConstraintClauses" type="SyntaxList" index="2" optional="false" changepoint="true" multiplicity="Collection" collectionType="TypeParameterConstraintClauseSyntax">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Members" type="SyntaxList" index="3" optional="false" changepoint="true" multiplicity="Collection" collectionType="MemberDeclarationSyntax">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ClassDeclarationSyntax" base="TypeDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Type #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Keyword" type="SyntaxToken" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TypeParameterList" type="TypeParameterListSyntax" index="4" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="=#LIST#TYPE#Parameter =#TYPE#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="BaseList" type="BaseListSyntax" index="5" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="=#LIST#TYPE#Base =#TYPE#Base">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ConstraintClauses" type="SyntaxList" index="6" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="TypeParameterConstraintClauseSyntax" hashtags="=#CLAUSE#TYPE#PARAMETER#Constraint">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" type="SyntaxToken" index="7" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Members" type="SyntaxList" index="8" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="MemberDeclarationSyntax" hashtags="#DECLARATION#Member">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" type="SyntaxToken" index="9" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="10" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="StructDeclarationSyntax" base="TypeDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Type #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Keyword" type="SyntaxToken" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TypeParameterList" type="TypeParameterListSyntax" index="4" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="=#LIST#TYPE#Parameter =#TYPE#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="BaseList" type="BaseListSyntax" index="5" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="=#LIST#TYPE#Base =#TYPE#Base">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ConstraintClauses" type="SyntaxList" index="6" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="TypeParameterConstraintClauseSyntax" hashtags="=#CLAUSE#TYPE#PARAMETER#Constraint">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" type="SyntaxToken" index="7" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Members" type="SyntaxList" index="8" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="MemberDeclarationSyntax" hashtags="#DECLARATION#Member">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" type="SyntaxToken" index="9" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="10" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="InterfaceDeclarationSyntax" base="TypeDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Type #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Keyword" type="SyntaxToken" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TypeParameterList" type="TypeParameterListSyntax" index="4" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="=#LIST#TYPE#Parameter =#TYPE#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="BaseList" type="BaseListSyntax" index="5" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="=#LIST#TYPE#Base =#TYPE#Base">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ConstraintClauses" type="SyntaxList" index="6" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="TypeParameterConstraintClauseSyntax" hashtags="=#CLAUSE#TYPE#PARAMETER#Constraint">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" type="SyntaxToken" index="7" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Members" type="SyntaxList" index="8" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="MemberDeclarationSyntax" hashtags="#DECLARATION#Member">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" type="SyntaxToken" index="9" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="10" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related-->
    <Type name="EnumMemberDeclarationSyntax" base="MemberDeclarationSyntax" hashtags="#declaration #DECLARATION#Member #member #enum#member =#DECLARATION#ENUM#Member">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EqualsValue" type="EqualsValueClauseSyntax" index="2" optional="true" changepoint="true" multiplicity="Single" hashtags="#CLAUSE#VALUE#Equals">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Eventually"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related$TypeParameterListSyntax-->
    <Type name="TypeParameterListSyntax" hashtags="#list #type #type#parameter #parameter =#LIST#TYPE#Parameter">
      <Properties>
        <Property name="LessThanToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" type="SeparatedSyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="TypeParameterSyntax" collectionSeparator="," hashtags="=#TYPE#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <!--<Name equality="true" absolute="true"/>-->
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="GreaterThanToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="TypeParameterSyntax" hashtags="#type #type#parameter #parameter #DECLARATION =#TYPE#Parameter">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="VarianceKeyword" type="SyntaxToken" index="1" optional="true" changepoint="true" multiplicity="Single" hashtags="#KEYWORD">
          <Options exclusive="true">
            <Kind name="InKeyword" hashtags="#KEYWORD"/>
            <Kind name="OutKeyword" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER #DECLARATION#VARIABLE#IDENTIFIER">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="TypeParameterConstraintClauseSyntax" hashtags="#TYPE#PARAMETER#CONSTRAINT #clause #type #type#parameter #parameter #constraint #DECLARATION =#CLAUSE#TYPE#PARAMETER#Constraint">
      <Properties>
        <Property name="WhereKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" type="IdentifierNameSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type#Name#Simple#Identifier #IDENTIFIER">
          <Rules>
            <Pairwise tunneling="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Constraints" type="SeparatedSyntaxList" index="3" optional="false" changepoint="true" multiplicity="Collection" collectionType="TypeParameterConstraintSyntax" collectionSeparator="," hashtags="=#TYPE#PARAMETER#Constraint">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related$TypeParameterConstraintSyntax-->
    <Type name="TypeParameterConstraintSyntax" abstract="true"/>
    <Type name="TypeConstraintSyntax" base="TypeParameterConstraintSyntax" hashtags="#TYPE#PARAMETER#Constraint #type #constraint">
      <Properties>
        <Property name="Type" type="TypeSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Pairwise discriminant="true" tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <Type name="ConstructorConstraintSyntax" base="TypeParameterConstraintSyntax" readonly="true" hashtags="#TYPE#PARAMETER#Constraint #constructor #constraint">
      <Properties>
        <Property name="NewKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal Likely"/>
      </Rules>
    </Type>
    <Type name="ClassOrStructConstraintSyntax" base="TypeParameterConstraintSyntax" readonly="true" hashtags="#TYPE#PARAMETER#Constraint #constraint">
      <Properties>
        <Property name="ClassOrStructKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" changepoint="true" multiplicity="Single" hashtags="#KEYWORD">
          <Options exclusive="true" labeling="true">
            <Kind name="ClassKeyword" type="ClassConstraint" hashtags="#KEYWORD"/>
            <Kind name="StructKeyword" type="StructConstraint" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal Likely"/>
      </Rules>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <!--And Related$BaseTypeSyntax-->
    <Type name="BaseListSyntax" hashtags="#list #base #TYPE#BASE =#LIST#TYPE#Base"><!--BaseTypeList-->
      <Properties>
        <Property name="ColonToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Types" type="SeparatedSyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="BaseTypeSyntax" collectionSeparator="," hashtags="=#TYPE#Base">
          <Rules collection="true">
            <Pairwise discriminant="true" tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="BaseTypeSyntax" abstract="true">
      <Properties>
        <Property name="Type" type="TypeSyntax" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="SimpleBaseTypeSyntax" base="BaseTypeSyntax" hashtags="#type #base #TYPE#BASE =#TYPE#Base">
      <Properties>
        <Property name="Type" type="TypeSyntax" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Pairwise discriminant="true" tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <!--And Related$BaseFieldDeclarationSyntax-->
    <Type name="BaseFieldDeclarationSyntax" abstract="true" base="MemberDeclarationSyntax">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax">
          <Rules>
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Declaration" type="VariableDeclarationSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single">
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="FieldDeclarationSyntax" base="BaseFieldDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Field #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Declaration" type="VariableDeclarationSyntax" index="2" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#DECLARATION#Variable #IDENTIFIER">
          <Rules collection="true">
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="3" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="EventFieldDeclarationSyntax" base="BaseFieldDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Field #event #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="EventKeyword" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Declaration" type="VariableDeclarationSyntax" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#DECLARATION#Variable #IDENTIFIER">
          <Rules collection="true">
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="4" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related-->
    <Type name="ExplicitInterfaceSpecifierSyntax" hashtags="#specifier">
      <Properties>
        <Property name="Name" type="NameSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type#Name #IDENTIFIER">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="DotToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related$BaseMethodDeclarationSyntax-->
    <Type name="BaseMethodDeclarationSyntax" abstract="true" base="MemberDeclarationSyntax">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax">
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" multiplicity="Collection">
        </Property>
        <Property name="ParameterList" type="ParameterListSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Signature equality="true" absolute="true"/>
          </Rules>
        </Property>
        <Property name="Body" type="BlockSyntax" index="3" optional="true" changepoint="true" multiplicity="Single">
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="4" optional="true" changepoint="true" multiplicity="Single">
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="MethodDeclarationSyntax" base="BaseMethodDeclarationSyntax" hashtags="#declaration #DECLARATION#Member #DECLARATION#Member#Method">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="ReturnType" type="TypeSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExplicitInterfaceSpecifier" type="ExplicitInterfaceSpecifierSyntax" index="3" optional="true" changepoint="true" multiplicity="Single" hashtags="=#SPECIFIER#INTERFACE#Explicit">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="4" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TypeParameterList" type="TypeParameterListSyntax" index="5" optional="true" changepoint="true" multiplicity="Single" hashtags="=#LIST#TYPE#Parameter =#TYPE#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" type="ParameterListSyntax" index="6" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#DECLARATION#VARIABLE #LIST#Parameter =#DECLARATION#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ConstraintClauses" type="SyntaxList" index="7" optional="false" changepoint="true" multiplicity="Collection" collectionType="TypeParameterConstraintClauseSyntax" hashtags="=#CLAUSE#TYPE#PARAMETER#Constraint">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" type="BlockSyntax" index="8" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#Statement#Block">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExpressionBody" type="ArrowExpressionClauseSyntax" index="9" optional="true" changepoint="true" multiplicity="Single" hashtags="#CLAUSE#EXPRESSION#Arrow">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="10" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="OperatorDeclarationSyntax" base="BaseMethodDeclarationSyntax" hashtags="#declaration #operator #DECLARATION#Member #DECLARATION#Member#Method">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="ReturnType" type="TypeSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OperatorKeyword" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OperatorToken" type="SyntaxToken" index="4" readOnly="true" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Options exclusive="true">
            <Kind name="PlusToken" hashtags="#OPERATOR"/>
            <Kind name="MinusToken" hashtags="#OPERATOR"/>
            <Kind name="ExclamationToken" hashtags="#OPERATOR"/>
            <Kind name="TildeToken" hashtags="#OPERATOR"/>
            <Kind name="PlusPlusToken" hashtags="#OPERATOR"/>
            <Kind name="MinusMinusToken" hashtags="#OPERATOR"/>
            <Kind name="AsteriskToken" hashtags="#OPERATOR"/>
            <Kind name="SlashToken" hashtags="#OPERATOR"/>
            <Kind name="PercentToken" hashtags="#OPERATOR"/>
            <Kind name="LessThanLessThanToken" hashtags="#OPERATOR"/>
            <Kind name="GreaterThanGreaterThanToken" hashtags="#OPERATOR"/>
            <Kind name="BarToken" hashtags="#OPERATOR"/>
            <Kind name="AmpersandToken" hashtags="#OPERATOR"/>
            <Kind name="CaretToken" hashtags="#OPERATOR"/>
            <Kind name="EqualsEqualsToken" hashtags="#OPERATOR"/>
            <Kind name="ExclamationEqualsToken" hashtags="#OPERATOR"/>
            <Kind name="LessThanToken" hashtags="#OPERATOR"/>
            <Kind name="LessThanEqualsToken" hashtags="#OPERATOR"/>
            <Kind name="GreaterThanToken" hashtags="#OPERATOR"/>
            <Kind name="GreaterThanEqualsToken" hashtags="#OPERATOR"/>
            <Kind name="FalseKeyword" hashtags="#KEYWORD #OPERATOR"/>
            <Kind name="TrueKeyword" hashtags="#KEYWORD #OPERATOR"/>
            <Kind name="IsKeyword" hashtags="#KEYWORD #OPERATOR"/>
          </Options>
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" type="ParameterListSyntax" index="5" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#DECLARATION#VARIABLE #LIST#Parameter =#DECLARATION#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" type="BlockSyntax" index="6" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#Statement#Block">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExpressionBody" type="ArrowExpressionClauseSyntax" index="7" optional="true" changepoint="true" multiplicity="Single" hashtags="#CLAUSE#EXPRESSION#Arrow">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="8" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ConversionOperatorDeclarationSyntax" base="BaseMethodDeclarationSyntax" hashtags="#declaration #operator #DECLARATION#Member #DECLARATION#Member#Method #conversion">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="ImplicitOrExplicitKeyword" type="SyntaxToken" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#KEYWORD">
          <Options exclusive="true">
            <Kind name="ImplicitKeyword" hashtags="#KEYWORD"/>
            <Kind name="ExplicitKeyword" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OperatorKeyword" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="4" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <!--<Name equality="true" absolute="true"/>-->
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" type="ParameterListSyntax" index="5" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#DECLARATION#VARIABLE #LIST#Parameter =#DECLARATION#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" type="BlockSyntax" index="6" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#Statement#Block">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExpressionBody" type="ArrowExpressionClauseSyntax" index="7" optional="true" changepoint="true" multiplicity="Single" hashtags="#CLAUSE#EXPRESSION#Arrow">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="8" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ConstructorDeclarationSyntax" base="BaseMethodDeclarationSyntax" hashtags="#declaration #constructor #DECLARATION#Member #DECLARATION#Member#Method">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" type="ParameterListSyntax" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#DECLARATION#VARIABLE #LIST#Parameter =#DECLARATION#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Initializer" type="ConstructorInitializerSyntax" index="4" optional="true" changepoint="true" multiplicity="Single" hashtags="#INITIALIZER#Constructor">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" type="BlockSyntax" index="5" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#Statement#Block">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="6" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ConstructorInitializerSyntax" hashtags="#constructor #initializer">
      <Properties>
        <Property name="ColonToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ThisOrBaseKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" changepoint="true" multiplicity="Single" hashtags="#KEYWORD">
          <Options exclusive="true" labeling="true">
            <Kind name="BaseKeyword" type="BaseConstructorInitializer" hashtags="#KEYWORD"/>
            <Kind name="ThisKeyword" type="ThisConstructorInitializer" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Signature equality="true" absolute="true"/>
            <!--<Name equality="true" absolute="true"/> It can be identified by the kind-->
            <Pairwise tunneling="true"/>
            <!--<Topology relevant="true"/>-->
            <!--should be this property a key or priorized pairwise change detection?-->
          </Rules>
        </Property>
        <Property name="ArgumentList" type="ArgumentListSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#LIST#Argument =#Argument">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <!--<Name equality="true" absolute="true"/>-->
            <Pairwise discriminant="true" tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Topology leaf="Likely"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <Type name="DestructorDeclarationSyntax" base="BaseMethodDeclarationSyntax" hashtags="#declaration #DECLARATION#Member #DECLARATION#Member#Method">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" readOnly="true" optional="false" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="TildeToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="3" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" type="ParameterListSyntax" index="4" readOnly="true" optional="false" inherited="true" multiplicity="Single">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" type="BlockSyntax" index="6" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#Statement#Block">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="7" readOnly="true" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--And Related$BasePropertyDeclarationSyntax-->
    <Type name="BasePropertyDeclarationSyntax" abstract="true" base="MemberDeclarationSyntax">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax">
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" multiplicity="Collection">
        </Property>
        <Property name="Type" type="TypeSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
        </Property>
        <Property name="ExplicitInterfaceSpecifier" type="ExplicitInterfaceSpecifierSyntax" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
          </Rules>
        </Property>
        <Property name="AccessorList" type="AccessorListSyntax" index="4" optional="false" changepoint="true" multiplicity="Single">
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="PropertyDeclarationSyntax" base="BasePropertyDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Property #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="2" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExplicitInterfaceSpecifier" type="ExplicitInterfaceSpecifierSyntax" index="3" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="=#SPECIFIER#INTERFACE#Explicit">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="4" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="AccessorList" type="AccessorListSyntax" index="5" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="=#LIST#Accessor =#DECLARATION#Accessor">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExpressionBody" type="ArrowExpressionClauseSyntax" index="6" optional="true" changepoint="true" multiplicity="Single" hashtags="#CLAUSE#EXPRESSION#Arrow">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Initializer" type="EqualsValueClauseSyntax" index="7" optional="true" changepoint="true" multiplicity="Single" hashtags="#CLAUSE#VALUE#Equals">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="8" readOnly="true" optional="true" changepoint="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ArrowExpressionClauseSyntax" hashtags="#expression #VALUE#WRAPPER #clause">
      <Properties>
        <Property name="ArrowToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Eventually"/>
      </Rules>
    </Type>
    <Type name="EventDeclarationSyntax" base="BasePropertyDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Property #event #DECLARATION#Member">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="EventKeyword" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="3" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExplicitInterfaceSpecifier" type="ExplicitInterfaceSpecifierSyntax" index="4" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="=#SPECIFIER#INTERFACE#Explicit">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="5" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="AccessorList" type="AccessorListSyntax" index="6" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="=#LIST#Accessor =#DECLARATION#Accessor">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="IndexerDeclarationSyntax" base="BasePropertyDeclarationSyntax" hashtags="#declaration #DECLARATION#Member#Property #DECLARATION#Member #indexer">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="2" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExplicitInterfaceSpecifier" type="ExplicitInterfaceSpecifierSyntax" index="3" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="=#SPECIFIER#INTERFACE#Explicit">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ThisKeyword" type="SyntaxToken" index="4" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD #IDENTIFIER">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" type="BracketedParameterListSyntax" index="5" optional="false" changepoint="true" multiplicity="Single" hashtags="#DECLARATION#VARIABLE #LIST#Parameter =#LIST#PARAMETER#Bracketed =#DECLARATION#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="AccessorList" type="AccessorListSyntax" index="6" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="=#LIST#Accessor =#DECLARATION#Accessor">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExpressionBody" type="ArrowExpressionClauseSyntax" index="6" optional="true" changepoint="true" multiplicity="Single" hashtags="#CLAUSE#EXPRESSION#Arrow">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="7" readOnly="true" optional="true" changepoint="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="AccessorListSyntax" hashtags="#list #accessor =#LIST#Accessor">
      <Properties>
        <Property name="OpenBraceToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Accessors" type="SyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="AccessorDeclarationSyntax" hashtags="=#DECLARATION#Accessor">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="AccessorDeclarationSyntax" hashtags="#declaration #DECLARATION #accessor =#DECLARATION#Accessor">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Keyword" type="SyntaxToken" index="2" readOnly="true" optional="false" changepoint="true" multiplicity="Single" hashtags="#KEYWORD">
          <Options exclusive="true" labeling="true">
            <Kind name="GetKeyword" type="GetAccessorDeclaration" hashtags="#KEYWORD"/>
            <Kind name="SetKeyword" type="SetAccessorDeclaration" hashtags="#KEYWORD"/>
            <Kind name="AddKeyword" type="AddAccessorDeclaration" hashtags="#KEYWORD"/>
            <Kind name="RemoveKeyword" type="RemoveAccessorDeclaration" hashtags="#KEYWORD"/>
            <Kind name="IdentifierToken" type="UnknownAccessorDeclaration" identifier="true" readonly="false"/>
          </Options>
          <Rules>
            <!--<Name equality="true" absolute="true"/> It can be identified by the kind-->
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevantOnlyIf="{0}.RawKind == (int)SyntaxKind.UnknownAccessorDeclaration"/>
          </Rules>
        </Property>
        <Property name="Body" type="BlockSyntax" index="3" optional="true" changepoint="true" multiplicity="Single" hashtags="#Statement#Block">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="4" readOnly="true" optional="true" changepoint="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <!--And Related$BaseParameterListSyntax-->
    <Type name="BaseParameterListSyntax" abstract="true">
      <Properties>
        <Property name="Parameters" type="SeparatedSyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="ParameterSyntax" collectionSeparator=",">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ParameterListSyntax" base="BaseParameterListSyntax" hashtags="#LIST#Parameter #list #parameter">
      <Properties>
        <Property name="OpenParenToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" type="SeparatedSyntaxList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="ParameterSyntax" collectionSeparator="," hashtags="=#DECLARATION#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Topology leaf="Likely"/>
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="BracketedParameterListSyntax" base="BaseParameterListSyntax" hashtags="#LIST#Parameter #list #parameter #bracketed =#LIST#PARAMETER#Bracketed">
      <Properties>
        <Property name="OpenBracketToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" type="SeparatedSyntaxList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="ParameterSyntax" collectionSeparator="," hashtags="=#DECLARATION#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBracketToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ParameterSyntax" hashtags="#parameter #DECLARATION =#DECLARATION#Parameter">
      <Properties>
        <Property name="AttributeLists" type="SyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="Modifiers" type="SyntaxTokenList" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="2"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="2" optional="true" changepoint="true" multiplicity="Single" hashtags="#Expression#Type #DECLARATION#VARIABLE#TYPE">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="3" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER #DECLARATION#VARIABLE#IDENTIFIER">
          <Options exclusive="true">
            <Kind name="IdentifierToken" identifier="true" readonly="false"/>
            <Kind name="ArgListKeyword" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Default" type="EqualsValueClauseSyntax" index="4" optional="true" changepoint="true" multiplicity="Single" hashtags="#CLAUSE#VALUE#Equals">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
        <Signature equality="true" absolute="true"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>

    <!--StructuredTriviaSyntax-->
    <Type name="StructuredTriviaSyntax" abstract="true"/>
    <Type name="SkippedTokensTriviaSyntax" base="StructuredTriviaSyntax" hashtags="#TRIVIA#Structured #trivia">
      <Properties>
        <Property name="Tokens" type="SyntaxTokenList" index="0" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <Type name="DocumentationCommentTriviaSyntax" base="StructuredTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #comment">
      <Properties>
        <Property name="Content" type="SyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="XmlNodeSyntax" hashtags="#XML#Node">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true" relevantOnlyIf=".Where(c => !(c is XmlTextSyntax text &amp;&amp; (string.IsNullOrEmpty(text.ToFullString()) || string.IsNullOrWhiteSpace(text.ToFullString()) || text.ToFullString().Trim(' ') == &quot;///&quot;)))"/>
          </Rules>
        </Property>
        <Property name="EndOfComment" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Options exclusive="true">
        <Type name="SingleLineDocumentationCommentTrivia"/>
        <Type name="MultiLineDocumentationCommentTrivia"/>
      </Options>
      <Rules collection="true"/>
      <Annotations>
        <Annotation context="Suppress" role="Kind"/>
      </Annotations>
    </Type>
    <!--StructuredTriviaSyntax$DirectiveTriviaSyntax-->
    <Type name="DirectiveTriviaSyntax" abstract="true" base="StructuredTriviaSyntax" readonly="true">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single">
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single">
        </Property>
      </Properties>
    </Type>
    <Type name="EndIfDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" readonly="true" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive #if #end">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndIfKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal Likely"/>
      </Rules>
    </Type>
    <Type name="RegionDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" readonly="true" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive #region">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="RegionKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/>
      </Rules>
    </Type>
    <Type name="EndRegionDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" readonly="true" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive #end #region">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndRegionKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/>
      </Rules>
    </Type>
    <Type name="ErrorDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" readonly="true" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ErrorKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/>
      </Rules>
    </Type>
    <Type name="WarningDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" readonly="true" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive #warning">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="WarningKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/>
      </Rules>
    </Type>
    <Type name="BadDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="DefineDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="DefineKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" type="SyntaxToken" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="3" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/><!-- Eventually Terminal?-->
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="UndefDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="UndefKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" type="SyntaxToken" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="3" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/><!-- Eventually Terminal?-->
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="LineDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="LineKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Line" type="SyntaxToken" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Options exclusive="true">
            <Kind name="NumericLiteralToken" literal="true" readonly="false"/>
            <Kind name="DefaultKeyword" hashtags="#KEYWORD"/>
            <Kind name="HiddenKeyword" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="File" type="SyntaxToken" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="4" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/>
      </Rules>
    </Type>
    <Type name="PragmaWarningDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive #warning #pragma">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="PragmaKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="WarningKeyword" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="DisableOrRestoreKeyword" type="SyntaxToken" index="3" optional="false" changepoint="true" multiplicity="Single" hashtags="#KEYWORD">
          <Options exclusive="true">
            <Kind name="DisableKeyword" hashtags="#KEYWORD"/>
            <Kind name="RestoreKeyword" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ErrorCodes" type="SeparatedSyntaxList" index="4" optional="false" changepoint="true" multiplicity="Collection" collectionType="ExpressionSyntax" collectionSeparator="," hashtags="#Expression">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="5" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology leaf="Likely"/><!-- Eventually Terminal?-->
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="PragmaChecksumDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive #pragma">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="PragmaKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ChecksumKeyword" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="File" type="SyntaxToken" index="3" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Guid" type="SyntaxToken" index="4" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Bytes" type="SyntaxToken" index="5" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="6" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/>
      </Rules>
    </Type>
    <Type name="ReferenceDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ReferenceKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="File" type="SyntaxToken" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="3" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/>
      </Rules>
    </Type>
    <Type name="LoadDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="LoadKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="File" type="SyntaxToken" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="3" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/>
      </Rules>
    </Type>
    <Type name="ShebangDirectiveTriviaSyntax" base="DirectiveTriviaSyntax" readonly="true" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ExclamationToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/>
      </Rules>
    </Type>
    <!--StructuredTriviaSyntax$DirectiveTriviaSyntax$BranchingDirectiveTriviaSyntax-->
    <Type name="BranchingDirectiveTriviaSyntax" abstract="true" base="DirectiveTriviaSyntax"/>
    <Type name="ElseDirectiveTriviaSyntax" base="BranchingDirectiveTriviaSyntax" readonly="true" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive#Branching #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ElseKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="2" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/>
      </Rules>
    </Type>
    <!--StructuredTriviaSyntax$DirectiveTriviaSyntax$BranchingDirectiveTriviaSyntax$ConditionalDirectiveTriviaSyntax-->
    <Type name="ConditionalDirectiveTriviaSyntax" abstract="true" base="BranchingDirectiveTriviaSyntax">
      <Properties>
        <Property name="Condition" type="ExpressionSyntax" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="IfDirectiveTriviaSyntax" base="ConditionalDirectiveTriviaSyntax" hashtags="#TRIVIA#Structured #trivia #directive #TRIVIA#Structured#Directive#Branching #TRIVIA#Structured#Directive#Branching#Conditional #TRIVIA#Structured#Directive #if">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="IfKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" type="ExpressionSyntax" index="2" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="3" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/><!--Eventually terminal?-->
      </Rules>
    </Type>
    <Type name="ElifDirectiveTriviaSyntax" base="ConditionalDirectiveTriviaSyntax" hashtags="#trivia #directive #TRIVIA#Structured#Directive#Branching #TRIVIA#Structured#Directive#Branching#Conditional #TRIVIA#Structured#Directive">
      <Properties>
        <Property name="HashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ElifKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" type="ExpressionSyntax" index="2" optional="false" changepoint="true" inherited="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfDirectiveToken" type="SyntaxToken" index="3" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/><!--Eventually terminal?-->
      </Rules>
    </Type>

    <!--An Related-->
    <!--An Related$CrefSyntax-->
    <Type name="CrefSyntax" abstract="true"/>
    <Type name="TypeCrefSyntax" base="CrefSyntax" hashtags="#cref #DECLARATION#MEMBER#TYPE #Cref #type">
      <Properties>
        <Property name="Type" type="TypeSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Pairwise discriminant="true" tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/><!--Eventually terminal?-->
      </Rules>
    </Type>
    <Type name="QualifiedCrefSyntax" base="CrefSyntax" hashtags="#cref #qualified #Cref">
      <Properties>
        <Property name="Container" type="TypeSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="DotToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Member" type="MemberCrefSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Cref#Member">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <Type name="MemberCrefSyntax" abstract="true" base="CrefSyntax"/>
    <Type name="NameMemberCrefSyntax" base="MemberCrefSyntax" hashtags="#cref #Cref#Member #DECLARATION#MEMBER #Cref #name #member">
      <Properties>
        <Property name="Name" type="TypeSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type #IDENTIFIER">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" type="CrefParameterListSyntax" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
        <Signature equality="true" absolute="true"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="IndexerMemberCrefSyntax" base="MemberCrefSyntax" hashtags="#Cref #Cref#Member #cref #member #indexer">
      <Properties>
        <Property name="ThisKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD #IDENTIFIER">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" type="CrefBracketedParameterListSyntax" index="1" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Topology leaf="Likely"/>
        <Signature equality="true" absolute="true"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="OperatorMemberCrefSyntax" base="MemberCrefSyntax" hashtags="#Cref #Cref#Member #cref #member #operator ">
      <Properties>
        <Property name="OperatorKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OperatorToken" type="SyntaxToken" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Options exclusive="true">
            <Kind name="PlusToken" hashtags="#OPERATOR"/>
            <Kind name="MinusToken" hashtags="#OPERATOR"/>
            <Kind name="ExclamationToken" hashtags="#OPERATOR"/>
            <Kind name="TildeToken" hashtags="#OPERATOR"/>
            <Kind name="PlusPlusToken" hashtags="#OPERATOR"/>
            <Kind name="MinusMinusToken" hashtags="#OPERATOR"/>
            <Kind name="AsteriskToken" hashtags="#OPERATOR"/>
            <Kind name="SlashToken" hashtags="#OPERATOR"/>
            <Kind name="PercentToken" hashtags="#OPERATOR"/>
            <Kind name="LessThanLessThanToken" hashtags="#OPERATOR"/>
            <Kind name="GreaterThanGreaterThanToken" hashtags="#OPERATOR"/>
            <Kind name="BarToken" hashtags="#OPERATOR"/>
            <Kind name="AmpersandToken" hashtags="#OPERATOR"/>
            <Kind name="CaretToken" hashtags="#OPERATOR"/>
            <Kind name="EqualsEqualsToken" hashtags="#OPERATOR"/>
            <Kind name="ExclamationEqualsToken" hashtags="#OPERATOR"/>
            <Kind name="LessThanToken" hashtags="#OPERATOR"/>
            <Kind name="LessThanEqualsToken" hashtags="#OPERATOR"/>
            <Kind name="GreaterThanToken" hashtags="#OPERATOR"/>
            <Kind name="GreaterThanEqualsToken" hashtags="#OPERATOR"/>
            <Kind name="FalseKeyword" hashtags="#KEYWORD #OPERATOR"/>
            <Kind name="TrueKeyword" hashtags="#KEYWORD #OPERATOR"/>
          </Options>
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" type="CrefParameterListSyntax" index="2" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
        <Signature equality="true" absolute="true"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ConversionOperatorMemberCrefSyntax" base="MemberCrefSyntax" hashtags="#Cref #Cref#Member #cref #member #operator #conversion">
      <Properties>
        <Property name="ImplicitOrExplicitKeyword" type="SyntaxToken" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#KEYWORD">
          <Options exclusive="true">
            <Kind name="ImplicitKeyword" hashtags="#KEYWORD"/>
            <Kind name="ExplicitKeyword" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OperatorKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" type="CrefParameterListSyntax" index="3" optional="true" changepoint="true" multiplicity="Single">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--An Related$BaseCrefParameterListSyntax-->
    <Type name="BaseCrefParameterListSyntax" abstract="true">
      <Properties>
        <Property name="Parameters" type="SeparatedSyntaxList" index="0" optional="false" multiplicity="Collection" collectionType="CrefParameterSyntax" collectionSeparator=",">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="CrefParameterListSyntax" base="BaseCrefParameterListSyntax" hashtags="#LIST#CrefParameter #parameter #list #cref">
      <Properties>
        <Property name="OpenParenToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" type="SeparatedSyntaxList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="CrefParameterSyntax" collectionSeparator="," hashtags="=#CREF#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="CrefBracketedParameterListSyntax" base="BaseCrefParameterListSyntax" hashtags="#LIST#CrefParameter #parameter #list #cref #bracketed">
      <Properties>
        <Property name="OpenBracketToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Parameters" type="SeparatedSyntaxList" index="1" optional="false" changepoint="true" inherited="true" multiplicity="Collection" collectionType="CrefParameterSyntax" collectionSeparator="," hashtags="=#CREF#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBracketToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Signature equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="CrefParameterSyntax" hashtags="#cref #parameter =#CREF#Parameter">
      <Properties>
        <Property name="RefKindKeyword" type="SyntaxToken" index="0" optional="true" changepoint="true" multiplicity="Single" hashtags="#KEYWORD">
          <Options exclusive="true">
            <Kind name="RefKeyword" hashtags="#KEYWORD"/>
            <Kind name="OutKeyword" hashtags="#KEYWORD"/>
            <Kind name="InKeyword" hashtags="#KEYWORD"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <!--An Related$XmlNodeSyntax-->
    <Type name="XmlNodeSyntax" abstract="true"/>
    <Type name="XmlElementSyntax" base="XmlNodeSyntax" hashtags="#xml #XML#Node #element">
      <Properties>
        <Property name="StartTag" type="XmlElementStartTagSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#XML#TAG#Start #IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Content" type="SyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="XmlNodeSyntax" hashtags="#XML#Node">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndTag" type="XmlElementEndTagSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#XML#TAG#End">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlElementStartTagSyntax" hashtags="#xml #tag #element">
      <Properties>
        <Property name="LessThanToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" type="XmlNameSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#XML#Name">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Attributes" type="SyntaxList" index="2" optional="false" changepoint="true" multiplicity="Collection" collectionType="XmlAttributeSyntax" hashtags="#XML#Attribute">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="GreaterThanToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Tiny"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlElementEndTagSyntax" hashtags="#xml #tag #element #end">
      <Properties>
        <Property name="LessThanSlashToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" type="XmlNameSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#XML#Name">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="GreaterThanToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Tiny Terminal"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlEmptyElementSyntax" base="XmlNodeSyntax" hashtags="#xml #XML#Node #element">
      <Properties>
        <Property name="LessThanToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" type="XmlNameSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#XML#Name #IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Attributes" type="SyntaxList" index="2" optional="false" changepoint="true" multiplicity="Collection" collectionType="XmlAttributeSyntax" hashtags="#XML#Attribute">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SlashGreaterThanToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlNameSyntax" hashtags="#xml #name">
      <Properties>
        <Property name="Prefix" type="XmlPrefixSyntax" index="0" optional="true" changepoint="true" multiplicity="Single" hashtags="#XML#Prefix">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
            <!--<Pairwise discriminant="true"/>?-->
          </Rules>
        </Property>
        <Property name="LocalName" type="SyntaxToken" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Tiny Terminal"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlPrefixSyntax" hashtags="#xml">
      <Properties>
        <Property name="Prefix" type="SyntaxToken" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Tiny Terminal"/>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <!--An Related$XmlAttributeSyntax-->
    <Type name="XmlAttributeSyntax" abstract="true">
      <Properties>
        <Property name="Name" type="XmlNameSyntax" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Name equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EqualsToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single">
        </Property>
        <Property name="StartQuoteToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single">
        </Property>
        <Property name="EndQuoteToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single">
        </Property>
      </Properties>
      <Rules>
        <Name equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlTextAttributeSyntax" base="XmlAttributeSyntax" hashtags="#xml #XML#Attribute #attribute #text">
      <Properties>
        <Property name="Name" type="XmlNameSyntax" index="0" optional="false" changepoint="true" inherited="true" multiplicity="Single" hashtags="#XML#Name #IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EqualsToken" type="SyntaxToken" index="1" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="StartQuoteToken" type="SyntaxToken" index="2" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Options exclusive="true">
            <Kind name="SingleQuoteToken" hashtags="#PUNTUACTION"/>
            <Kind name="DoubleQuoteToken" hashtags="#PUNTUACTION"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
          <!-- readOnly="true"-->
        </Property>
        <Property name="TextTokens" type="SyntaxTokenList" index="3" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndQuoteToken" type="SyntaxToken" index="4" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Options exclusive="true">
            <Kind name="SingleQuoteToken" hashtags="#PUNTUACTION"/>
            <Kind name="DoubleQuoteToken" hashtags="#PUNTUACTION"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>         
          </Rules>
          <!-- readOnly="true"-->
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Tiny"/><!--<Topology leaf="Eventually Terminal"/>-->   
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlCrefAttributeSyntax" base="XmlAttributeSyntax" hashtags="#xml #XML#Attribute #cref #attribute">
      <Properties>
        <Property name="Name" type="XmlNameSyntax" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#XML#Name">
          <!--<Rules>
            <Topology relevant="true"/>
          </Rules>--> 
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EqualsToken" type="SyntaxToken" index="1" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="StartQuoteToken" type="SyntaxToken" index="2" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Options exclusive="true">
            <Kind name="SingleQuoteToken" hashtags="#PUNTUACTION"/>
            <Kind name="DoubleQuoteToken" hashtags="#PUNTUACTION"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
          <!-- readOnly="true"-->
        </Property>
        <Property name="Cref" type="CrefSyntax" index="3" optional="false" changepoint="true" multiplicity="Single" hashtags="#Cref #IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndQuoteToken" type="SyntaxToken" index="4" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Options exclusive="true">
            <Kind name="SingleQuoteToken" hashtags="#PUNTUACTION"/>
            <Kind name="DoubleQuoteToken" hashtags="#PUNTUACTION"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
          <!-- readOnly="true"-->
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Tiny"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlNameAttributeSyntax" base="XmlAttributeSyntax" hashtags="#xml #XML#Attribute #PARAMETER #name #attribute">
      <Properties>
        <Property name="Name" type="XmlNameSyntax" index="0" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#XML#Name">
          <!--<Rules>
            <Topology relevant="true"/>
          </Rules>--> 
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="EqualsToken" type="SyntaxToken" index="1" readOnly="true" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="StartQuoteToken" type="SyntaxToken" index="2" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Options exclusive="true">
            <Kind name="SingleQuoteToken" hashtags="#PUNTUACTION"/>
            <Kind name="DoubleQuoteToken" hashtags="#PUNTUACTION"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
          <!-- readOnly="true"-->
        </Property>
        <Property name="Identifier" type="IdentifierNameSyntax" index="3" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER #Expression#Type#Name#Simple#Identifier">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndQuoteToken" type="SyntaxToken" index="4" optional="false" inherited="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Options exclusive="true">
            <Kind name="SingleQuoteToken" hashtags="#PUNTUACTION"/>
            <Kind name="DoubleQuoteToken" hashtags="#PUNTUACTION"/>
          </Options>
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
          <!-- readOnly="true"-->
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Tiny Eventually Terminal"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlTextSyntax" base="XmlNodeSyntax" hashtags="#xml #XML#Node #text">
      <Properties>
        <Property name="TextTokens" type="SyntaxTokenList" index="0" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Topology leaf="Tiny"/><!--<Topology leaf="Eventually Terminal"/>-->
      </Rules>
    </Type>
    <Type name="XmlCDataSectionSyntax" base="XmlNodeSyntax" hashtags="#xml #XML#Node">
      <Properties>
        <Property name="StartCDataToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="TextTokens" type="SyntaxTokenList" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndCDataToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Topology leaf="Likely"/><!--<Topology leaf="Eventually Terminal"/>-->
      </Rules>
    </Type>
    <Type name="XmlProcessingInstructionSyntax" base="XmlNodeSyntax" hashtags="#xml #XML#Node">
      <Properties>
        <Property name="StartProcessingInstructionToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" type="XmlNameSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#XML#Name #IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TextTokens" type="SyntaxTokenList" index="2" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">            
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndProcessingInstructionToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/><!--<Topology leaf="Eventually Terminal"/>-->
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="XmlCommentSyntax" base="XmlNodeSyntax" hashtags="#xml #XML#Node #comment">
      <Properties>
        <Property name="LessThanExclamationMinusMinusToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="TextTokens" type="SyntaxTokenList" index="1" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="MinusMinusGreaterThanToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Topology leaf="Likely"/><!--<Topology leaf="Eventually Terminal"/>-->
      </Rules>
    </Type>

    <!--CompilationUnitSyntax - Level 4-->
    <Type name="CompilationUnitSyntax">
      <Properties>
        <Property name="Externs" type="SyntaxList" index="0" optional="false" changepoint="true" multiplicity="Collection" collectionType="ExternAliasDirectiveSyntax" hashtags="=#DIRECTIVE#ExternAlias">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Usings" type="SyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="UsingDirectiveSyntax" hashtags="=#DIRECTIVE#Using">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="AttributeLists" type="SyntaxList" index="2" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeListSyntax" hashtags="=#LIST#Attribute">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Members" type="SyntaxList" index="3" optional="false" changepoint="true" multiplicity="Collection" collectionType="MemberDeclarationSyntax" hashtags="#DECLARATION#Member">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="EndOfFileToken" type="SyntaxToken" index="4" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>
    <Type name="ExternAliasDirectiveSyntax" hashtags="#directive #alias =#DIRECTIVE#ExternAlias">
      <Properties>
        <Property name="ExternKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="AliasKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="UsingDirectiveSyntax" hashtags="#directive =#DIRECTIVE#Using">
      <Properties>
        <Property name="UsingKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="StaticKeyword" type="SyntaxToken" index="1" readOnly="true" optional="true" changepoint="true" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Alias" type="NameEqualsSyntax" index="2" optional="true" changepoint="true" multiplicity="Single" hashtags="#EXPRESSION#TYPE#NAME#SIMPLE#IDENTIFIER#Equals #IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Name" type="NameSyntax" index="3" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type#Name #IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="4" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="NamespaceDeclarationSyntax" base="MemberDeclarationSyntax" hashtags="#declaration #DECLARATION#Member">
      <Properties>
        <Property name="NamespaceKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Name" type="NameSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type#Name #IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="OpenBraceToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Externs" type="SyntaxList" index="3" optional="false" changepoint="true" multiplicity="Collection" collectionType="ExternAliasDirectiveSyntax" hashtags="=#DIRECTIVE#ExternAlias">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Usings" type="SyntaxList" index="4" optional="false" changepoint="true" multiplicity="Collection" collectionType="UsingDirectiveSyntax" hashtags="=#DIRECTIVE#Using">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Members" type="SyntaxList" index="5" optional="false" changepoint="true" multiplicity="Collection" collectionType="MemberDeclarationSyntax" hashtags="#DECLARATION#Member">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBraceToken" type="SyntaxToken" index="6" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="7" readOnly="true" optional="true" changepoint="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="AttributeListSyntax" hashtags="#list #attribute =#LIST#Attribute">
      <Properties>
        <Property name="OpenBracketToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Target" type="AttributeTargetSpecifierSyntax" index="1" optional="true" changepoint="true" multiplicity="Single" hashtags="=#SPECIFIER#ATTRIBUTE#Target">
          <Rules>
            <!--<Name equality="true" absolute="true"/>-->
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Attributes" type="SeparatedSyntaxList" index="2" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeSyntax" collectionSeparator="," hashtags="=#DECLARATION#Attribute">
          <Rules collection="true">
            <!--<Name equality="true" absolute="true"/>-->
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseBracketToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <!--<Name equality="true" absolute="true"/>-->
      </Rules>
    </Type>
    <Type name="AttributeTargetSpecifierSyntax" hashtags="#attribute #specifier =#SPECIFIER#ATTRIBUTE#Target">
      <Properties>
        <Property name="Identifier" type="SyntaxToken" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <!--<Name equality="true" absolute="true"/>-->
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Terminal Tiny"/>
        <!--<Name equality="true" absolute="true"/>-->
      </Rules>
    </Type>
    <Type name="AttributeSyntax" hashtags="#attribute #DECLARATION =#DECLARATION#Attribute">
      <Properties>
        <Property name="Name" type="NameSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type#Name #IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ArgumentList" type="AttributeArgumentListSyntax" index="1" optional="true" changepoint="true" multiplicity="Single" hashtags="=#LIST#ATTRIBUTE#Argument =#ATTRIBUTE#Argument">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="AttributeArgumentListSyntax" hashtags="#list #attribute #attribute#argument #argument =#LIST#ATTRIBUTE#Argument">
      <Properties>
        <Property name="OpenParenToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Arguments" type="SeparatedSyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="AttributeArgumentSyntax" collectionSeparator="," hashtags="=#ATTRIBUTE#Argument">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>
    <Type name="AttributeArgumentSyntax" hashtags="#attribute#argument #attribute #argument =#ATTRIBUTE#Argument">
      <Properties>
        <Property name="NameEquals" type="NameEqualsSyntax" index="0" optional="true" changepoint="true" multiplicity="Single" hashtags="#EXPRESSION#TYPE#NAME#SIMPLE#IDENTIFIER#Equals #IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Compatibility>
              <Exclusive mutually="true" with="NameColon"/>
            </Compatibility>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="NameColon" type="NameColonSyntax" index="1" optional="true" changepoint="true" multiplicity="Single" hashtags="#EXPRESSION#TYPE#NAME#SIMPLE#IDENTIFIER#Colon #IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>

    <!--New ones for C# 7.x-->
    <Type name="WhenClauseSyntax" base="CSharpSyntaxNode" hashtags="#SWITCH #SWITCH#LABEL #CATCH #clause">
      <Properties>
        <Property name="WhenKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Condition" type="ExpressionSyntax" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Tiny"/>
      </Rules>
    </Type>
    <Type name="TupleTypeSyntax" base="TypeSyntax" hashtags="#Expression #Expression#Type #tuple #type">
      <Properties>
        <Property name="OpenParenToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Elements" type="SeparatedSyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="TupleElementSyntax" collectionSeparator="," hashtags="=#TYPE#TUPLE#Element">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Topology leaf="Tiny"/>
      </Rules>
    </Type>
    <Type name="TupleExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #tuple">
      <Properties>
        <Property name="OpenParenToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Arguments" type="SeparatedSyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="ArgumentSyntax" collectionSeparator="," hashtags="=#Argument">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true">
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <Type name="TupleElementSyntax" base="CSharpSyntaxNode" hashtags="#tuple #element =#TYPE#TUPLE#Element">
      <Properties>
        <Property name="Type" type="TypeSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type #DECLARATION#VARIABLE#TYPE">
          <Rules>
            <Pairwise discriminant="true" priority="1"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="1" optional="true" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER #DECLARATION#VARIABLE#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true" priority="0"/>
            <Topology relevant="true" relevantOnlyIf="{0}.Identifier.ValueText != null"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="ThrowExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #throw">
      <Properties>
        <Property name="ThrowKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>

    <Type name="VariableDesignationSyntax" base="CSharpSyntaxNode" abstract="true"/>
    <Type name="SingleVariableDesignationSyntax" base="VariableDesignationSyntax" hashtags="#variable #DECLARATION#VARIABLE#Designation">
      <!--declaration-->
      <Properties>
        <Property name="Identifier" type="SyntaxToken" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER #DECLARATION#VARIABLE#IDENTIFIER">
          <Rules>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Terminal"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
    </Type>
    <Type name="DiscardDesignationSyntax" base="VariableDesignationSyntax" readonly="true" hashtags="#DECLARATION#VARIABLE#Designation">
      <Properties>
        <Property name="UnderscoreToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Tiny Terminal"/>
      </Rules>
    </Type>
    <Type name="ParenthesizedVariableDesignationSyntax" base="VariableDesignationSyntax" hashtags="#variable #DECLARATION#VARIABLE#Designation #parenthesized">
      <!--declaration-->
      <Properties>
        <Property name="OpenParenToken" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Variables" type="SeparatedSyntaxList" index="1" optional="false" changepoint="true" multiplicity="Collection" collectionType="VariableDesignationSyntax" collectionSeparator="," hashtags="#DECLARATION#VARIABLE #DECLARATION#VARIABLE#Designation">
          <Rules collection="true">
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules collection="true"/>
    </Type>

    <Type name="RefExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #ref">
      <Properties>
        <Property name="RefKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="1" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>

    <Type name="CasePatternSwitchLabelSyntax" base="SwitchLabelSyntax" hashtags="#switch #SWITCH#Label #pattern #label">
      <Properties>
        <Property name="Keyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" inherited="true" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Pattern" type="PatternSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#Pattern">
          <Rules>
            <Topology relevant="true"/>
            </Rules>
        </Property>
        <Property name="WhenClause" type="WhenClauseSyntax" index="2" optional="true" changepoint="true" multiplicity="Single" hashtags="#CLAUSE#When">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ColonToken" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" inherited="true" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <Type name="IsPatternExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #pattern">
      <Properties>
        <Property name="Expression" type="ExpressionSyntax" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="IsKeyword" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Pattern" type="PatternSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Pattern">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <!--Compatibility with is and as-->
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <Type name="DeclarationExpressionSyntax" base="ExpressionSyntax" hashtags="#Expression #expression #declaration #DECLARATION#VARIABLE #DECLARATION"><!--variable-->
      <Properties>
        <Property name="Type" type="TypeSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type #DECLARATION#VARIABLE#TYPE">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Designation" type="VariableDesignationSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#DECLARATION#VARIABLE#Designation #DECLARATION#VARIABLE#IDENTIFIER">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
    <Type name="CommonForEachStatementSyntax" base="StatementSyntax" abstract="true">
      <Properties>
        <Property name="ForEachKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" inherited="true" hashtags="#KEYWORD">
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single">
        </Property>
        <Property name="InKeyword" type="SyntaxToken" index="2" readOnly="true" optional="false" multiplicity="Single" inherited="true" hashtags="#KEYWORD">
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="3" optional="false" changepoint="true" multiplicity="Single">
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="4" readOnly="true" optional="false" multiplicity="Single">
        </Property>
        <Property name="Statement" type="StatementSyntax" index="5" optional="false" changepoint="true" multiplicity="Single">
        </Property>
      </Properties>
      <!--For compatibility-->
    </Type>
    <Type name="ForEachVariableStatementSyntax" base="CommonForEachStatementSyntax" hashtags="#Statement #statement #Statement#ForEach #for #variable">
      <!--declaration-->
      <Properties>
        <Property name="ForEachKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" inherited="true" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="OpenParenToken" type="SyntaxToken" index="1" readOnly="true" optional="false" multiplicity="Single" inherited="true" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Variable" type="ExpressionSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#DECLARATION#VARIABLE">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="InKeyword" type="SyntaxToken" index="3" readOnly="true" optional="false" multiplicity="Single" inherited="true" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Expression" type="ExpressionSyntax" index="4" optional="false" changepoint="true" multiplicity="Single" inherited="true">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="CloseParenToken" type="SyntaxToken" index="5" readOnly="true" optional="false" multiplicity="Single" inherited="true" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Statement" type="StatementSyntax" index="6" optional="false" changepoint="true" multiplicity="Single" inherited="true" hashtags="#Statement">
          <Rules eventuallyCollection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
    </Type>

    <Type name="PatternSyntax" base="CSharpSyntaxNode" abstract="true"/>
    <Type name="DeclarationPatternSyntax" base="PatternSyntax" hashtags="#Pattern #declaration #DECLARATION#VARIABLE#DECLARATOR #pattern"><!--variable-->
      <!--declaration-->
      <Properties>
        <Property name="Type" type="TypeSyntax" index="0" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type #DECLARATION#VARIABLE#TYPE">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Designation" type="VariableDesignationSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#DECLARATION#VARIABLE#Designation #DECLARATION#VARIABLE#IDENTIFIER">
          <Options exclusive="true">
            <Kind name="SingleVariableDesignation" expression="true"/>
            <Kind name="DiscardDesignation" expression="true"/>
          </Options>
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Tiny"/>
      </Rules>
    </Type>
    <Type name="ConstantPatternSyntax" base="PatternSyntax" hashtags="#Pattern #pattern">
      <Properties>
        <Property name="Expression" type="ExpressionSyntax" index="0" optional="false" changepoint="true" multiplicity="Single">
          <Rules>
            <Pairwise discriminant="true" tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely Tiny"/>
      </Rules>
    </Type>

    <Type name="LocalFunctionStatementSyntax" base="StatementSyntax" hashtags="#Statement #statement #DECLARATION #DECLARATION#LOCAL #DECLARATION#FUNCTION">
      <Properties>
        <Property name="Modifiers" type="SyntaxTokenList" index="0" optional="false" changepoint="true" multiplicity="Collection">
          <Rules collection="true">
            <Pairwise tunneling="true"/>
            <Topology relevant="true" relevancy="1"/>
          </Rules>
        </Property>
        <Property name="ReturnType" type="TypeSyntax" index="1" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Identifier" type="SyntaxToken" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#IDENTIFIER">
          <Rules>
            <Signature equality="true" absolute="true"/>
            <Name suitability="Key" equality="true" absolute="true"/>
            <Pairwise tunneling="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="TypeParameterList" type="TypeParameterListSyntax" index="3" optional="true" changepoint="true" multiplicity="Single" hashtags="=#LIST#TYPE#Parameter =#TYPE#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ParameterList" type="ParameterListSyntax" index="4" optional="false" changepoint="true" multiplicity="Single" hashtags="#DECLARATION#VARIABLE #LIST#Parameter =#DECLARATION#Parameter">
          <Rules collection="true">
            <Signature equality="true" absolute="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ConstraintClauses" type="SyntaxList" index="5" optional="false" changepoint="true" multiplicity="Collection" collectionType="TypeParameterConstraintClauseSyntax" hashtags="=#CLAUSE#TYPE#PARAMETER#Constraint">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="Body" type="BlockSyntax" index="6" optional="true" changepoint="true" inherited="true" multiplicity="Single" hashtags="#Statement#Block">
          <Rules collection="true">
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="ExpressionBody" type="ArrowExpressionClauseSyntax" index="7" optional="true" changepoint="true" multiplicity="Single" hashtags="#CLAUSE#EXPRESSION#Arrow">
          <Rules>
            <Topology relevant="true"/>
          </Rules>
        </Property>
        <Property name="SemicolonToken" type="SyntaxToken" index="8" readOnly="true" optional="true" multiplicity="Single" hashtags="#PUNTUACTION">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Signature equality="true" absolute="true"/>
        <Name suitability="Key" equality="true" absolute="true"/>
      </Rules>
      <!--Method compatibility-->
    </Type>
    <Type name="RefTypeSyntax" base="TypeSyntax" hashtags="#Expression #Expression#Type #ref #type">
      <Properties>
        <Property name="RefKeyword" type="SyntaxToken" index="0" readOnly="true" optional="false" multiplicity="Single" inherited="true" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="ReadOnlyKeyword" type="SyntaxToken" index="1" readOnly="true" optional="true" multiplicity="Single" inherited="true" hashtags="#KEYWORD">
          <Rules>
            <Pairwise tunneling="true"/>
          </Rules>
        </Property>
        <Property name="Type" type="TypeSyntax" index="2" optional="false" changepoint="true" multiplicity="Single" hashtags="#Expression#Type">
          <Rules>
            <Pairwise discriminant="true"/>
            <Topology relevant="true"/>
          </Rules>
        </Property>
      </Properties>
      <Rules>
        <Topology leaf="Likely"/>
      </Rules>
    </Type>
  </Nodes>
</Syntax>